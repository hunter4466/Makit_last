{"version":3,"sources":["components/homepage.js","components/utilities/idgen.js","redux/cart/cart.js","components/modules/shoppingcart/cartitempicker.js","components/modules/shoppingcart/cartstorepicker.js","components/utilities/localstorage.js","components/modules/shoppingcart/namepicker.js","components/modules/shoppingcart/phonepicker.js","components/modules/shoppingcart/deliverstatepicker.js","components/modules/shoppingcart/addresspicker.js","components/modules/shoppingcart/paymentpicker.js","components/utilities/whatsorder.js","components/modules/shoppingcart/overallview.js","components/shoppingcart.js","redux/store/store.js","components/modules/store/storesecondary.js","components/modules/store/storepicker.js","components/modules/store/itempicker.js","components/modules/store/storemain.js","components/store.js","App.js","redux/configureStore.js","index.js"],"names":["HomePage","to","miniIdGenerator","s4","Math","floor","random","toString","substring","guid","idGenerator","REFRESH_CART","APPEND_PRODUCT_TO_CART","MODIFY_PRODUCT_FROM_CART","MODIFY_DELIVERY_STATE_AND_VALUE","MODIFY_USER_NAME","MODIFY_ORDER_DELIVERY_STATE","MODIFY_USER_PHONE","MODIFY_USER_ADDRESS_AND_REF","MODIFY_PAYMENT_METHOD","CLEAR_CART","SWITCH_SHOPPING_CART","SWITCH_CART_STORE_PICKER","SWITCH_CART_ITEM_PICKER","SWITCH_NAME_PICKER","SWITCH_PHONE_PICKER","SWITCH_DELIVERY_STATE_PICKER","SWITCH_ADDRESS_PICKER","SWITCH_PAYMENT_PICKER","RESET_CART_SWITCH","SWITCH_OVERALL_VIEW","START_POINT_SWITCH","FILL_CART_STORE_PICKER","CART_STORE_REPLACEMENT_ACTION","FILL_CART_ITEM_PICKER","refreshcart","type","modifiDeliveryStateAndValue","payload","modifyusername","modifyuserphone","modifyaddressandref","switchShoppingCart","switchCartStorePicker","switchnamepicker","switchphonepicker","switchdeliverystatepicker","switchaddresspicker","switchpaymentpicker","switchCartItemPicker","setdeliverystartpointswitch","switchoverallview","cartSwitchInitialState","shoppingcart","cartstorepicker","cartitempicker","namepicker","phonepicker","deliverystatepicker","addresspicker","paymentpicker","overallview","deliverystartpoint","cartReducerInitialState","sessionStorage","getItem","JSON","parse","ordercontent","customerid","customername","customerphone","code","orderaddress","orderinneradress","orderaddressref","orderproductsamount","orderamounttotal","orderdeliverystate","orderdeliveryamount","paymentmethod","orderregisterdate","orderdeliverdate","orderregistertime","orderdelivertime","Cartitempicker","dispatch","useDispatch","itemData","useSelector","state","cartItemPickerReducer","useState","completedFields","setCompleted","itemsCounter","setCounter","uncompleteAlert","setUncAlert","useEffect","handleAddClick","key","nameTitle","document","querySelectorAll","nameDescr","quantityInput","nameTitleArray","i","length","push","name","innerHTML","quantity","parseInt","value","description","codename","id","objectForSend","header","content","completed","maxvalue","factor","map","innerdata","className","split","join","defaultValue","onClick","ref","input","getElementById","allInput","allInputArray","forEach","e","sumValue","reduce","a","b","maxValue","handleUpClick","handleDownClick","Cartstorepicker","pickerData","cartStorePickerReducer","handleClick","info","handleAddProductToCart","array","checkAll","data","storageAvailable","storage","window","x","setItem","removeItem","DOMException","Namepicker","username","setUserName","auth","localStorage","handleBackClick","onChange","nameInput","stringify","handleChange","maxLength","placeholder","handleClick2","Phonepicker","userphone","setUserPhone","phoneInput","Deliverstatepicker","handleDeliveryClick","Addresspicker","useradressactive","setActiveUserAdress","useraddress","setUserAddress","userSavedAddress","setUserSavedAddress","addressInput","interiorAddressInput","refInput","address","inneradress","reference","handleBackBtn","values","handleNextClick","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","style","backgroundColor","active","Paymentpicker","deliverstate","cartSwitchReducer","capitalizeFirstLetter","string","charAt","toUpperCase","slice","whatsorder","order","stringArray","elem","elemsub","elemsubsub","urlPath","open","focus","Overallview","confirmation","setConfirmation","cartReducer","handleContinueConfirmationBtn","eh","ec","ecc","price","parseFloat","toFixed","ShoppingCart","switchState","handleEditClick","param","TRIGGER_STORE","TRIGGER_PRODUCTS","GET_CATEGORIES","GET_PRODUCTS","GET_PICKER","SEND_ITEM_CONTENT","APPEND_ITEM_TO_PRODUCT","BUILD_ITEM","SET_ITEM_HEADER","SET_PRODUCT_HEADER","SET_FINAL_PRODUCT_HEADER","CHANGE_COMPLETED_STATE","SWITCH_PARENT_STATE","SWITCH_SECONDARY_STORE","SWITCH_STORE_PICKER","SWITCH_ITEM_PICKER","RESET_STORE","SWITCH_LOADING_1","SWITCH_LOADING_2","SWITCH_LOADING_3","firstLoadState","initialState","switchParentState","switchSecondaryState","switchStorePicker","switchItemPicker","resetStore","loadingSwitch1","loadingSwitch2","loadingSwitch3","storeSwitchDefaultState","parentState","secondaryStoreState","storePickerState","itemPickerState","loading1State","loading2State","loading3State","Storesecondary","secondaryData","storeSecondaryReducer","storeSwitchReducer","idproductos","nombre","precio","Storepicker","storePickerReducer","productBuild","productBuildReducer","opentItemPicker","Itempicker","itemPickerReducer","indexes","cantidad","arrayToTest","tester","allInputs","arrayToSample","allPreviousValues","changeCompletedState","descripcion","Storemain","productData","storemainReducer","idcategorias","Store","App","handleStoreCloseClick","path","reducer","combineReducers","action","storeState","actionPayload","activeState","activeContent","replaceCompletedState","itemBuildReducer","load","replaceData","toRep","arrayToRep","productsArray","stateObject","sumProducts","priceValue","filter","replaceFunction","stateArray","newArray","composedEnhancer","compose","applyMiddleware","store","next","fetch","headers","then","response","json","returnValue","getState","logger","createStore","undefined","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aba50ecd.chunk.js","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst HomePage = () => (\n  <div>\n    <Link to=\"/store\"> Toca aquí y empieza tu pedido ya mismo!</Link>\n  </div>\n);\nexport default HomePage;\n// https://maps.googleapis.com/maps/api/js?key=AIzaSyA4gO4y4GUGVf3deiUQkiHdGsD2LcIVAoc&libraries=places&callback=initMap&channel=GMPSB_addressselection_v1_cAB\n","const idGenerator = () => {\n  const guid = () => {\n    const s4 = () => Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n    return `${s4() + s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n  };\n  const newKey = guid();\n  return newKey;\n};\n\nconst miniIdGenerator = () => {\n  const guid = () => {\n    const s4 = () => Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n    return `${s4() + s4()}-${s4()}`;\n  };\n  const newKey = guid();\n  return newKey;\n};\n\nexport default idGenerator;\nexport { miniIdGenerator };\n","import idGenerator from '../../components/utilities/idgen';\n\n// ---------------- DUCK'S PATHERN VARIABLES --------------------\n// ---- Cart store -----\nconst [\n  REFRESH_CART,\n  APPEND_PRODUCT_TO_CART,\n  MODIFY_PRODUCT_FROM_CART,\n  MODIFY_DELIVERY_STATE_AND_VALUE,\n  MODIFY_USER_NAME,\n  MODIFY_ORDER_DELIVERY_STATE,\n  MODIFY_USER_PHONE,\n  MODIFY_USER_ADDRESS_AND_REF,\n  MODIFY_PAYMENT_METHOD,\n  CLEAR_CART,\n] = [\n  'REDUX/CART/REFRESH_CART',\n  'REDUX/CART/APPEND_PRODUCT_TO_CART',\n  'REDUX/CART/MODIFY_PRODUCT_FROM_CART',\n  'REDUX/CART/MODIFY_DELIVERY_STATE_AND_VALUE',\n  'REDUX/CART/MODIFY_USER_NAME',\n  'REDUX/CART/MODIFY_ORDER_DELIVERY_STATE',\n  'REDUX/CART/MODIFY_USER_PHONE',\n  'REDUX/CART/MODIFY_USER_ADDRESS_AND_REF',\n  'REDUX/CART/MODIFY_PAYMENT_METHOD',\n  'REDUX/CART/CLEAR_CART',\n];\n// ---- Cart switch -----\nconst [\n  SWITCH_SHOPPING_CART,\n  SWITCH_CART_STORE_PICKER,\n  SWITCH_CART_ITEM_PICKER,\n  SWITCH_NAME_PICKER,\n  SWITCH_PHONE_PICKER,\n  SWITCH_DELIVERY_STATE_PICKER,\n  SWITCH_ADDRESS_PICKER,\n  SWITCH_PAYMENT_PICKER,\n  RESET_CART_SWITCH,\n  SWITCH_OVERALL_VIEW,\n  START_POINT_SWITCH,\n] = [\n  'REDUX/CART/SWITCH_SHOPPING_CART',\n  'REDUX/CART/SWITCH_CART_STORE_PICKER',\n  'REDUX/CART/SWITCH_CART_ITEM_PICKER',\n  'REDUX/CART/SWITCH_NAME_PICKER',\n  'REDUX/CART/SWITCH_PHONE_PICKER',\n  'REDUX/CART/SWITCH_DELIVERY_STATE_PICKER',\n  'REDUX/CART/SWITCH_ADDRESS_PICKER',\n  'REDUX/CART/SWITCH_PAYMENT_PICKER',\n  'REDUX/CART/RESET_CART_SWITCH',\n  'REDUX/CART/SWITCH_OVERALL_VIEW',\n  'REDUX/CART/START_POINT_SWITCH',\n];\n\n// ---- Cart store picker -----\nconst [\n  FILL_CART_STORE_PICKER,\n  CART_STORE_REPLACEMENT_ACTION,\n] = [\n  'REDUX/CART/FILL_CART_STORE_PICKER',\n  'REDUX/CART/CART_STORE_REPLACEMENT_ACTION',\n];\n// ---- Cart item picker -----\nconst FILL_CART_ITEM_PICKER = 'REDUX/CART/FILL_CART_ITEM_PICKER';\n// ---------------- ACTIONS ------------------\n// ---- Cart store -----\nconst refreshcart = () => ({\n  type: REFRESH_CART,\n});\nconst buildProduct = (payload) => ({\n  type: APPEND_PRODUCT_TO_CART,\n  payload,\n});\nconst modifyProductFromCart = (payload) => ({\n  type: MODIFY_PRODUCT_FROM_CART,\n  payload,\n});\nconst modifiDeliveryStateAndValue = (payload) => ({\n  type: MODIFY_DELIVERY_STATE_AND_VALUE,\n  payload,\n});\nconst modifyusername = (payload) => ({\n  type: MODIFY_USER_NAME,\n  payload,\n});\nconst modifydeliverystate = (payload) => ({\n  type: MODIFY_ORDER_DELIVERY_STATE,\n  payload,\n});\nconst modifyuserphone = (payload) => ({\n  type: MODIFY_USER_PHONE,\n  payload,\n});\nconst modifyaddressandref = (payload) => ({\n  type: MODIFY_USER_ADDRESS_AND_REF,\n  payload,\n});\nconst modifypaymentmethod = (payload) => ({\n  type: MODIFY_PAYMENT_METHOD,\n  payload,\n});\nconst clearCart = () => ({\n  type: CLEAR_CART,\n});\n// ---- Cart switch -----\nconst switchShoppingCart = (payload) => ({\n  type: SWITCH_SHOPPING_CART,\n  payload,\n});\nconst switchCartStorePicker = (payload) => ({\n  type: SWITCH_CART_STORE_PICKER,\n  payload,\n});\nconst switchnamepicker = (payload) => ({\n  type: SWITCH_NAME_PICKER,\n  payload,\n});\nconst switchphonepicker = (payload) => ({\n  type: SWITCH_PHONE_PICKER,\n  payload,\n});\nconst switchdeliverystatepicker = (payload) => ({\n  type: SWITCH_DELIVERY_STATE_PICKER,\n  payload,\n});\nconst switchaddresspicker = (payload) => ({\n  type: SWITCH_ADDRESS_PICKER,\n  payload,\n});\nconst switchpaymentpicker = (payload) => ({\n  type: SWITCH_PAYMENT_PICKER,\n  payload,\n});\nconst switchCartItemPicker = (payload) => ({\n  type: SWITCH_CART_ITEM_PICKER,\n  payload,\n});\nconst resetCartSwitch = () => ({\n  type: RESET_CART_SWITCH,\n});\nconst setdeliverystartpointswitch = (payload) => ({\n  type: START_POINT_SWITCH,\n  payload,\n});\nconst switchoverallview = (payload) => ({\n  type: SWITCH_OVERALL_VIEW,\n  payload,\n});\n// ---- Cart store picker -----\nconst fillCartStorePicker = (payload) => ({\n  type: FILL_CART_STORE_PICKER,\n  payload,\n});\nconst cartStoreReplacementAction = (payload) => ({\n  type: CART_STORE_REPLACEMENT_ACTION,\n  payload,\n});\n// ---- Cart item picker -----\nconst fillCartItemPicker = (payload) => ({\n  type: FILL_CART_ITEM_PICKER,\n  payload,\n});\n// ---------------- REDUCERS ------------------\nconst cartSwitchInitialState = {\n  shoppingcart: true,\n  cartstorepicker: false,\n  cartitempicker: false,\n  namepicker: false,\n  phonepicker: false,\n  deliverystatepicker: false,\n  addresspicker: false,\n  paymentpicker: false,\n  overallview: false,\n  deliverystartpoint: false,\n};\nconst cartSwitchReducer = (state = cartSwitchInitialState, action) => {\n  const activeState = {\n    shoppingcart: state.shoppingcart,\n    cartstorepicker: state.cartstorepicker,\n    cartitempicker: state.cartitempicker,\n    namepicker: state.namepicker,\n    phonepicker: state.phonepicker,\n    deliverystatepicker: state.deliverystatepicker,\n    addresspicker: state.addresspicker,\n    paymentpicker: state.paymentpicker,\n    overallview: state.overallview,\n    deliverystartpoint: state.deliverystartpoint,\n  };\n  switch (action.type) {\n    case SWITCH_SHOPPING_CART:\n      activeState.shoppingcart = action.payload;\n      return activeState;\n    case SWITCH_CART_STORE_PICKER:\n      activeState.cartstorepicker = action.payload;\n      return activeState;\n    case SWITCH_CART_ITEM_PICKER:\n      activeState.cartitempicker = action.payload;\n      return activeState;\n    case SWITCH_NAME_PICKER:\n      activeState.namepicker = action.payload;\n      return activeState;\n    case SWITCH_PHONE_PICKER:\n      activeState.phonepicker = action.payload;\n      return activeState;\n    case SWITCH_DELIVERY_STATE_PICKER:\n      activeState.deliverystatepicker = action.payload;\n      return activeState;\n    case SWITCH_ADDRESS_PICKER:\n      activeState.addresspicker = action.payload;\n      return activeState;\n    case SWITCH_PAYMENT_PICKER:\n      activeState.paymentpicker = action.payload;\n      return activeState;\n    case SWITCH_OVERALL_VIEW:\n      activeState.overallview = action.payload;\n      return activeState;\n    case START_POINT_SWITCH:\n      activeState.deliverystartpoint = action.payload;\n      return activeState;\n    case RESET_CART_SWITCH:\n      return cartSwitchInitialState;\n    default:\n      return state;\n  }\n};\nconst cartReducerInitialState = () => {\n  if (sessionStorage.getItem('cartInfo')) {\n    return JSON.parse(sessionStorage.getItem('cartInfo'));\n  }\n  return {\n    ordercontent: [],\n    customerid: null,\n    customername: 'Not Defined',\n    customerphone: null,\n    code: `order_${idGenerator()}`,\n    orderaddress: 'Not Defined',\n    orderinneradress: 'Not Defined',\n    orderaddressref: 'Not Defined',\n    orderproductsamount: null,\n    orderamounttotal: null,\n    orderdeliverystate: false,\n    orderdeliveryamount: 0,\n    paymentmethod: 'Not Defined',\n    orderregisterdate: null,\n    orderdeliverdate: false,\n    orderregistertime: null,\n    orderdelivertime: null,\n  };\n};\n\nconst cartReducer = (state = cartReducerInitialState(), action) => {\n  const productsArray = state.ordercontent;\n  const stateObject = state;\n  const sumProducts = (array) => {\n    let priceValue = 0;\n    for (let i = 0; i < array.length; i += 1) {\n      priceValue = parseFloat(priceValue) + parseFloat(array[i].price);\n    }\n    return priceValue;\n  };\n  switch (action.type) {\n    case REFRESH_CART:\n      return state;\n    case CLEAR_CART:\n      return {\n        ordercontent: [],\n        customerid: state.customerid,\n        customername: state.customername,\n        customerphone: state.customerphone,\n        code: state.code,\n        orderaddress: state.orderaddress,\n        orderinneradress: state.orderinneradress,\n        orderaddressref: state.orderaddressref,\n        orderproductsamount: state.orderproductsamount,\n        orderamounttotal: state.orderamounttotal,\n        orderdeliverystate: state.orderdeliverystate,\n        orderdeliveryamount: state.orderdeliveryamount,\n        paymentmethod: state.paymentmethod,\n        orderregisterdate: state.orderregisterdate,\n        orderdeliverdate: state.orderdeliverdate,\n        orderregistertime: state.orderregistertime,\n        orderdelivertime: state.orderdelivertime,\n      };\n    case APPEND_PRODUCT_TO_CART:\n      productsArray.push(action.payload);\n      stateObject.ordercontent = productsArray;\n      stateObject.orderproductsamount = sumProducts(productsArray);\n      stateObject.orderamounttotal = sumProducts(productsArray)\n      + parseFloat(stateObject.orderdeliveryamount);\n      return stateObject;\n    case MODIFY_PRODUCT_FROM_CART:\n      stateObject.ordercontent = productsArray.filter((e) => e.code !== action.payload.code);\n      stateObject.ordercontent.push(action.payload);\n      return stateObject;\n    case MODIFY_DELIVERY_STATE_AND_VALUE:\n      stateObject.orderdeliverystate = action.payload.state;\n      stateObject.orderdeliveryamount = parseFloat(action.payload.value);\n      stateObject.orderamounttotal = sumProducts(productsArray)\n      + parseFloat(stateObject.orderdeliveryamount);\n      return stateObject;\n    case MODIFY_USER_NAME:\n      stateObject.customername = action.payload;\n      return stateObject;\n    case MODIFY_ORDER_DELIVERY_STATE:\n      stateObject.orderdeliverystate = action.payload;\n      return stateObject;\n    case MODIFY_USER_PHONE:\n      stateObject.customerphone = action.payload;\n      return stateObject;\n    case MODIFY_USER_ADDRESS_AND_REF:\n      stateObject.orderaddress = action.payload.address;\n      stateObject.orderinneradress = action.payload.inneradress;\n      stateObject.orderaddressref = action.payload.reference;\n      return stateObject;\n    case MODIFY_PAYMENT_METHOD:\n      stateObject.paymentmethod = action.payload;\n      return stateObject;\n    default:\n      return state;\n  }\n};\nconst cartStorePickerReducer = (state = [], action) => {\n  const replaceFunction = () => {\n    const stateArray = [...state.content];\n    const newArray = [];\n    for (let i = 0; i < stateArray.length; i += 1) {\n      if (stateArray[i].header === action.payload.header) {\n        newArray.push(action.payload);\n      } else {\n        newArray.push(stateArray[i]);\n      }\n    }\n    return newArray;\n  };\n  switch (action.type) {\n    case FILL_CART_STORE_PICKER:\n      return action.payload;\n    case CART_STORE_REPLACEMENT_ACTION:\n      return {\n        header: state.header,\n        price: state.price,\n        code: state.code,\n        content: replaceFunction(),\n      };\n    default:\n      return state;\n  }\n};\nconst cartItemPickerReducer = (state = [], action) => {\n  switch (action.type) {\n    case FILL_CART_ITEM_PICKER:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// ---------------- Middlewares and Side Effects --------------\nconst saveCartInfoMiddleware = (store) => (next) => (action) => {\n  const tester = () => {\n    const sample = [\n      REFRESH_CART,\n      APPEND_PRODUCT_TO_CART,\n      MODIFY_PRODUCT_FROM_CART,\n      MODIFY_DELIVERY_STATE_AND_VALUE,\n      MODIFY_USER_NAME,\n      MODIFY_ORDER_DELIVERY_STATE,\n      MODIFY_USER_PHONE,\n      MODIFY_USER_ADDRESS_AND_REF,\n      MODIFY_PAYMENT_METHOD,\n    ];\n    let returnValue = false;\n    sample.forEach((e) => {\n      if (action.type === e) {\n        returnValue = true;\n      }\n    });\n    return returnValue;\n  };\n  if (tester()) {\n    sessionStorage.setItem('cartInfo', JSON.stringify(store.getState().cartReducer));\n  }\n  next(action);\n};\n// ---------------- Exports --------------\nexport {\n  // ------ Reducers -------\n  cartReducer,\n  cartSwitchReducer,\n  cartStorePickerReducer,\n  cartItemPickerReducer,\n  // ------ Actions --------\n  buildProduct,\n  switchShoppingCart,\n  switchCartStorePicker,\n  switchCartItemPicker,\n  fillCartStorePicker,\n  modifyProductFromCart,\n  fillCartItemPicker,\n  resetCartSwitch,\n  cartStoreReplacementAction,\n  modifiDeliveryStateAndValue,\n  switchnamepicker,\n  switchphonepicker,\n  modifyusername,\n  modifyuserphone,\n  switchdeliverystatepicker,\n  switchaddresspicker,\n  modifydeliverystate,\n  modifyaddressandref,\n  switchpaymentpicker,\n  modifypaymentmethod,\n  refreshcart,\n  setdeliverystartpointswitch,\n  switchoverallview,\n  clearCart,\n  // ---- Middlewares -----\n  saveCartInfoMiddleware,\n};\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { cartStoreReplacementAction, switchCartItemPicker, switchCartStorePicker } from '../../../redux/cart/cart';\n// import { switchCartItemPicker, switchCartStorePicker } from '../../../redux/cart/cart';\n\nconst Cartitempicker = () => {\n  const dispatch = useDispatch();\n  const itemData = useSelector((state) => state.cartItemPickerReducer);\n  const [completedFields, setCompleted] = useState(false);\n  const [itemsCounter, setCounter] = useState(0);\n  const [uncompleteAlert, setUncAlert] = useState(false);\n\n  useEffect(() => {\n    setCompleted(true);\n  }, []);\n\n  const handleUpClick = (key, ref) => {\n    const input = document.getElementById(ref);\n    const allInput = document.querySelectorAll(`.${key}`);\n    const allInputArray = [];\n    allInput.forEach((e) => {\n      allInputArray.push(parseInt(e.value, 10));\n    });\n    const sumValue = allInputArray.reduce((a, b) => a + b);\n    const maxValue = parseInt(itemData.maxvalue, 10);\n    const factor = parseInt(itemData.factor, 10);\n    if (sumValue < maxValue) {\n      setCounter(itemsCounter - factor);\n      input.value = parseInt(input.value, 10) + factor;\n      if (maxValue - sumValue === factor) {\n        setCompleted(true);\n      }\n    }\n  };\n  const handleDownClick = (ref) => {\n    const input = document.getElementById(ref);\n    const factor = parseInt(itemData.factor, 10);\n    if (parseInt(input.value, 10) > 0) {\n      setCounter(itemsCounter + factor);\n      input.value = parseInt(input.value, 10) - parseInt(itemData.factor, 10);\n      setCompleted(false);\n    }\n  };\n  const handleAddClick = (key) => {\n    if (completedFields) {\n      const nameTitle = document.querySelectorAll('#sub_item_name');\n      const nameDescr = document.querySelectorAll('#sub_item_description');\n      const quantityInput = document.querySelectorAll(`.${key}`);\n      const nameTitleArray = [];\n      for (let i = 0; i < nameTitle.length; i += 1) {\n        nameTitleArray.push({\n          name: nameTitle[i].innerHTML,\n          quantity: parseInt(quantityInput[i].value, 10),\n          description: nameDescr[i].innerHTML,\n          codename: quantityInput[i].id,\n        });\n      }\n      const objectForSend = {\n        header: itemData.header,\n        content: nameTitleArray,\n        completed: true,\n        maxvalue: parseInt(itemData.maxvalue, 10),\n        factor: parseInt(itemData.factor, 10),\n      };\n      dispatch(cartStoreReplacementAction(objectForSend));\n      dispatch(switchCartItemPicker(false));\n      dispatch(switchCartStorePicker(true));\n    } else {\n      setUncAlert(true);\n    }\n  };\n  const handleBackBtn = () => {\n    dispatch(switchCartItemPicker(false));\n    dispatch(switchCartStorePicker(true));\n  };\n  return (\n    <div>\n      <h1>\n        Elige tus\n        {' '}\n        {itemData.header}\n      </h1>\n      {itemData.content.map((innerdata) => (\n        <div key={innerdata.name}>\n          <h1 id=\"sub_item_name\">\n            {innerdata.name}\n          </h1>\n          <p id=\"sub_item_description\">{innerdata.description}</p>\n          <div>\n            <input className={`classident_${itemData.header.split(' ').join('_')}`} id={innerdata.codename} type=\"number\" defaultValue={innerdata.quantity} />\n            <div>\n              <button type=\"button\" onClick={() => { handleUpClick(`classident_${itemData.header.split(' ').join('_')}`, innerdata.codename); }}>Up</button>\n              <button type=\"button\" onClick={() => { handleDownClick(innerdata.codename); }}>Down</button>\n            </div>\n          </div>\n        </div>\n      ))}\n      <div>{completedFields ? 'Completed' : `Tienes ${itemsCounter} por escoger`}</div>\n      {uncompleteAlert ? (<div>Background</div>) : ''}\n      {uncompleteAlert ? (<div onClick={() => { setUncAlert(false); }}><h1>Aun tienes items por escoger!</h1></div>) : ''}\n      <button type=\"button\" onClick={() => { handleAddClick(`classident_${itemData.header.split(' ').join('_')}`); }}>Aceptar</button>\n      <button type=\"button\" onClick={() => handleBackBtn()}>Volver</button>\n    </div>\n  );\n};\n\nexport default Cartitempicker;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fillCartItemPicker,\n  modifyProductFromCart,\n  switchCartItemPicker,\n  switchCartStorePicker,\n  switchShoppingCart,\n} from '../../../redux/cart/cart';\n\nconst Cartstorepicker = () => {\n  const dispatch = useDispatch();\n  const pickerData = useSelector((state) => state.cartStorePickerReducer);\n  const handleClick = (info) => {\n    dispatch(fillCartItemPicker(info));\n    dispatch(switchCartStorePicker(false));\n    dispatch(switchCartItemPicker(true));\n  };\n  const checkAll = (array) => {\n    for (let i = 0; i < array.length; i += 1) {\n      if (!array[i].completed) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleAddProductToCart = () => {\n    if (checkAll(pickerData.content)) {\n      dispatch(modifyProductFromCart(pickerData));\n      dispatch(switchCartStorePicker(false));\n      dispatch(switchShoppingCart(true));\n    }\n    return false;\n  };\n  const handleBackBtn = () => {\n    dispatch(switchCartStorePicker(false));\n    dispatch(switchShoppingCart(true));\n  };\n  return (\n    <div className=\"store_picker_container\">\n      <div>\n        <div>StorePicker</div>\n        {pickerData.content.map((data) => (\n          <div key={data.header}>\n            <button\n              className={data.completed ? 'completed_btn' : 'uncompleted_btn'}\n              type=\"button\"\n              onClick={() => {\n                handleClick(data);\n              }}\n            >\n              {data.header}\n            </button>\n          </div>\n        ))}\n        <button type=\"button\" onClick={() => handleAddProductToCart()}>Terminar modificaciones</button>\n        <button type=\"button\" onClick={() => handleBackBtn()}>Volver</button>\n      </div>\n    </div>\n  );\n};\nexport default Cartstorepicker;\n","const storageAvailable = (type) => {\n  let storage;\n  try {\n    storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e instanceof DOMException && (\n      e.code === 22\n                      || e.code === 1014\n                      || e.name === 'QuotaExceededError'\n                      || e.name === 'NS_ERROR_DOM_QUOTA_REACHED')\n                      && (storage && storage.length !== 0);\n  }\n};\n\nexport default storageAvailable;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  modifyusername,\n  switchnamepicker,\n  switchphonepicker,\n  switchShoppingCart,\n} from '../../../redux/cart/cart';\nimport storageAvailable from '../../utilities/localstorage';\n\nconst Namepicker = () => {\n  const [username, setUserName] = useState(false);\n  const dispatch = useDispatch();\n  const handleClick = (auth) => {\n    if (auth) {\n      dispatch(switchnamepicker(false));\n      dispatch(switchphonepicker(true));\n      dispatch(modifyusername(username));\n    } else {\n      setUserName(false);\n    }\n  };\n  const handleClick2 = () => {\n    const nameInput = document.getElementById('custom_name_input');\n    dispatch(switchnamepicker(false));\n    dispatch(switchphonepicker(true));\n    dispatch(modifyusername(nameInput.value));\n  };\n  const handleChange = () => {\n    const nameInput = document.getElementById('custom_name_input');\n    if (storageAvailable('localStorage')) {\n      localStorage.setItem('customName', JSON.stringify(nameInput.value));\n    }\n  };\n  useEffect(() => {\n    if (localStorage.getItem('customName')) {\n      setUserName(JSON.parse(localStorage.getItem('customName')));\n    }\n  }, []);\n  const handleBackClick = () => {\n    dispatch(switchnamepicker(false));\n    dispatch(switchShoppingCart(true));\n  };\n  return (\n    <div>\n      {username ? (\n        <div>\n          <h1>\n            Tu nombre es\n            {' '}\n            {username}\n            ?\n          </h1>\n          <button type=\"button\" onClick={() => { handleClick(true); }}>Sí</button>\n          <button type=\"button\" onClick={() => { handleClick(false); }}>No</button>\n          <button type=\"button\" onClick={() => { handleBackClick(); }}>Volver</button>\n        </div>\n      ) : (\n        <div>\n          <h1>Indícanos tu nombre</h1>\n          <input onChange={() => { handleChange(); }} type=\"text\" maxLength=\"50\" placeholder=\"Nombre\" id=\"custom_name_input\" />\n          <button type=\"button\" onClick={() => { handleClick2(); }}>Aceptar</button>\n          <button type=\"button\" onClick={() => { handleBackClick(); }}>Volver</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Namepicker;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  modifyuserphone,\n  switchdeliverystatepicker,\n  switchnamepicker,\n  switchphonepicker,\n} from '../../../redux/cart/cart';\nimport storageAvailable from '../../utilities/localstorage';\n\nconst Phonepicker = () => {\n  const [userphone, setUserPhone] = useState(false);\n  const dispatch = useDispatch();\n  const handleClick = (auth) => {\n    if (auth) {\n      dispatch(switchphonepicker(false));\n      dispatch(switchdeliverystatepicker(true));\n      dispatch(modifyuserphone(userphone));\n    } else {\n      setUserPhone(false);\n    }\n  };\n  const handleClick2 = () => {\n    const phoneInput = document.getElementById('custom_phone_input');\n    dispatch(switchphonepicker(false));\n    dispatch(switchdeliverystatepicker(true));\n    dispatch(modifyuserphone(phoneInput.value));\n  };\n  const handleChange = () => {\n    const phoneInput = document.getElementById('custom_phone_input');\n    if (storageAvailable('localStorage')) {\n      localStorage.setItem('customPhone', JSON.stringify(phoneInput.value));\n    }\n  };\n  useEffect(() => {\n    if (localStorage.getItem('customPhone')) {\n      setUserPhone(JSON.parse(localStorage.getItem('customPhone')));\n    }\n  }, []);\n  const handleBackClick = () => {\n    dispatch(switchphonepicker(false));\n    dispatch(switchnamepicker(true));\n  };\n  return (\n    <div>\n      {userphone ? (\n        <div>\n          <h1>\n            Tu teléfono es el\n            {' '}\n            {userphone}\n            ?\n          </h1>\n          <button type=\"button\" onClick={() => { handleClick(true); }}>Sí</button>\n          <button type=\"button\" onClick={() => { handleClick(false); }}>No</button>\n          <button type=\"button\" onClick={() => { handleBackClick(); }}>Volver</button>\n        </div>\n      ) : (\n        <div>\n          <h1>Ingresa tu teléfono</h1>\n          <input onChange={() => { handleChange(); }} type=\"number\" maxLength=\"9\" placeholder=\"Teléfono\" id=\"custom_phone_input\" />\n          <button type=\"button\" onClick={() => { handleClick2(); }}>Aceptar</button>\n          <button type=\"button\" onClick={() => { handleBackClick(); }}>Volver</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Phonepicker;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  modifiDeliveryStateAndValue,\n  setdeliverystartpointswitch,\n  switchaddresspicker,\n  switchdeliverystatepicker,\n  switchpaymentpicker,\n  switchphonepicker,\n} from '../../../redux/cart/cart';\n\nconst Deliverstatepicker = () => {\n  const dispatch = useDispatch();\n  const handleDeliveryClick = (auth) => {\n    dispatch(switchdeliverystatepicker(false));\n    if (auth) {\n      dispatch(modifiDeliveryStateAndValue({ state: true, value: '4.90' }));\n      dispatch(switchaddresspicker(true));\n      dispatch(setdeliverystartpointswitch(true));\n    } else {\n      dispatch(setdeliverystartpointswitch(false));\n      dispatch(modifiDeliveryStateAndValue({ state: false, value: '0' }));\n      dispatch(switchpaymentpicker(true));\n    }\n  };\n  const handleBackClick = () => {\n    dispatch(switchdeliverystatepicker(false));\n    dispatch(switchphonepicker(true));\n  };\n  return (\n    <div>\n      <h1>Donde deseas tu pedido?</h1>\n      <button type=\"button\" onClick={() => { handleDeliveryClick(true); }}>En mi domicilio (Delivery)</button>\n      <button type=\"button\" onClick={() => { handleDeliveryClick(false); }}>En el local (Recojo)</button>\n      <button type=\"button\" onClick={() => { handleBackClick(); }}>Volver</button>\n    </div>\n  );\n};\n\nexport default Deliverstatepicker;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PlacesAutocomplete, {\n} from 'react-places-autocomplete';\nimport {\n  modifyaddressandref,\n  switchaddresspicker,\n  switchdeliverystatepicker,\n  switchpaymentpicker,\n} from '../../../redux/cart/cart';\nimport storageAvailable from '../../utilities/localstorage';\nimport { miniIdGenerator } from '../../utilities/idgen';\n\nconst Addresspicker = () => {\n  const [useradressactive, setActiveUserAdress] = useState(false);\n  const [useraddress, setUserAddress] = useState('');\n  const [userSavedAddress, setUserSavedAddress] = useState({});\n  const dispatch = useDispatch();\n  const handleSelect = (value) => {\n    setUserAddress(value);\n  };\n  const handleClick = (auth) => {\n    if (auth) {\n      const addressInput = document.getElementById('custom_address_input');\n      const interiorAddressInput = document.getElementById('interior_address_input');\n      const refInput = document.getElementById('custom_reference_input');\n      dispatch(switchaddresspicker(false));\n      dispatch(switchpaymentpicker(true));\n      dispatch(modifyaddressandref({\n        address: addressInput.value,\n        inneradress: interiorAddressInput.value,\n        reference: refInput.value,\n      }));\n      if (storageAvailable('localStorage')) {\n        localStorage.setItem('customAddress', JSON.stringify({\n          address: addressInput.value,\n          inneradress: interiorAddressInput.value,\n          reference: refInput.value,\n        }));\n      }\n    } else {\n      setActiveUserAdress(false);\n    }\n  };\n  const handleNextClick = () => {\n    const values = JSON.parse(localStorage.getItem('customAddress'));\n    dispatch(modifyaddressandref({\n      address: values.address,\n      inneradress: values.inneradress,\n      reference: values.reference,\n    }));\n    dispatch(switchaddresspicker(false));\n    dispatch(switchpaymentpicker(true));\n  };\n  useEffect(() => {\n    if (localStorage.getItem('customAddress')) {\n      setActiveUserAdress(true);\n      setUserSavedAddress(JSON.parse(localStorage.getItem('customAddress')));\n    }\n  }, []);\n  const handleBackBtn = () => {\n    dispatch(switchaddresspicker(false));\n    dispatch(switchdeliverystatepicker(true));\n  };\n  return (\n    <div>\n      {useradressactive ? (\n        <div>\n          <h1>\n            Confirmamos tu dirección en:\n            {' '}\n            {userSavedAddress.address}\n            {', '}\n            {userSavedAddress.inneradress}\n            {', '}\n            {userSavedAddress.reference}\n            {'? '}\n          </h1>\n          <button type=\"button\" onClick={() => { handleNextClick(); }}>Sí</button>\n          <button type=\"button\" onClick={() => { handleClick(false); }}>No</button>\n          <button type=\"button\" onClick={() => { handleBackBtn(); }}>Volver</button>\n        </div>\n      ) : (\n        <div>\n          <PlacesAutocomplete\n            value={useraddress}\n            onChange={setUserAddress}\n            onSelect={handleSelect}\n          >\n            {({\n              getInputProps, suggestions, getSuggestionItemProps, loading,\n            }) => (\n              <div>\n                <h1>A donde lo enviamos?</h1>\n                <input id=\"custom_address_input\" {...getInputProps({ placeholder: 'Dirección' })} />\n                <input id=\"interior_address_input\" type=\"text\" maxLength=\"144\" placeholder=\"Interior (Ejemplo: Mz B Lote 1, dpto 102)\" />\n                <input id=\"custom_reference_input\" type=\"text\" maxLength=\"144\" placeholder=\"Referencia\" />\n                <div>\n                  {loading ? <div>...cargando</div> : null}\n\n                  {suggestions.map((suggestion) => {\n                    const style = {\n                      backgroundColor: suggestion.active ? '#41b6e6' : '#fff',\n                    };\n                    return (\n                      <div\n                        key={miniIdGenerator()}\n                        {...getSuggestionItemProps(\n                          suggestion,\n                          { style },\n                        )}\n                      >\n                        {suggestion.description}\n                      </div>\n                    );\n                  })}\n                </div>\n                <button type=\"button\" onClick={() => { handleClick(true); }}>Aceptar</button>\n                <button type=\"button\" onClick={() => { handleBackBtn(); }}>Volver</button>\n              </div>\n            )}\n          </PlacesAutocomplete>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Addresspicker;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  modifypaymentmethod,\n  switchaddresspicker,\n  switchdeliverystatepicker,\n  switchoverallview,\n  switchpaymentpicker,\n} from '../../../redux/cart/cart';\n\nconst Paymentpicker = () => {\n  const dispatch = useDispatch();\n  const deliverstate = useSelector((state) => state.cartSwitchReducer);\n  const handleClick = (value) => {\n    dispatch(modifypaymentmethod(value));\n    dispatch(switchpaymentpicker(false));\n    dispatch(switchoverallview(true));\n  };\n  const handleBackClick = () => {\n    if (deliverstate.deliverystartpoint) {\n      dispatch(switchaddresspicker(true));\n      dispatch(switchpaymentpicker(false));\n    } else {\n      dispatch(switchdeliverystatepicker(true));\n      dispatch(switchpaymentpicker(false));\n    }\n  };\n  return (\n    <div>\n      <button type=\"button\" onClick={() => { handleClick('Yape'); }}>Yape</button>\n      <button type=\"button\" onClick={() => { handleClick('Plin'); }}>Plin</button>\n      <button type=\"button\" onClick={() => { handleClick('PagoLink (VISA)'); }}>VISA (Pagolink)</button>\n      <button type=\"button\" onClick={() => { handleClick('PagoLink (Mastercard)'); }}>Mastercard (Pagolink)</button>\n      <button type=\"button\" onClick={() => { handleClick('PagoLink (Amex)'); }}>AMEX (Pagolink)</button>\n      <button type=\"button\" onClick={() => { handleClick('Transferencia BCP'); }}>Transferencia BCP</button>\n      <button type=\"button\" onClick={() => { handleClick('Transferencia BBVA'); }}>Transferencia BBVA</button>\n      <button type=\"button\" onClick={() => { handleBackClick(); }}>Volver</button>\n    </div>\n  );\n};\n\nexport default Paymentpicker;\n","function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst whatsorder = (order) => {\n  const stringArray = [];\n  stringArray.push(`Hola!%20Mi%20nombre%20es%20${order.customername.split(' ').join('%20')}!%0AEsta%20es%20mi%20orden%20para%20hoy:%0A`);\n  order.ordercontent.forEach((elem) => {\n    stringArray.push(`%0A%20%20%20🍣%20${capitalizeFirstLetter(elem.header.split(' ').join('%20'))}%0A`);\n    elem.content.forEach((elemsub) => {\n      stringArray.push(`%0A%20%20%20%20%20%20-%20${capitalizeFirstLetter(elemsub.header.split(' ').join('%20'))}%0A`);\n      elemsub.content.forEach((elemsubsub) => {\n        if (elemsubsub.quantity) { stringArray.push(`%20%20%20%20%20%20%20%20${capitalizeFirstLetter(elemsubsub.name.split(' ').join('%20'))}%20x%20${elemsubsub.quantity}%0A`); }\n      });\n    });\n    stringArray.push('%0A-------------------------------%0A');\n  });\n  if (order.orderdeliverystate) {\n    stringArray.push(`%0A%20Lo%20deseo%20para%20delivery%0A%20a%20la%20dirección:%0A%20*%20${order.orderaddress.split(' ').join('%20')}%0A%20Referencia:%0A%20*%20${order.orderaddressref.split(' ').join('%20')}`);\n  } else { stringArray.push('%0A%20Deseo%20recogerlo%20en%20el%20local.'); }\n  stringArray.push(`%0A%0A%20El%20monto%20total%20de%20mi%20orden%20es%20de%20S/%20${order.orderamounttotal}%0A%0A`);\n  if (order.orderdeliverystate) { stringArray.push('%20Incluido%20el%20recargo%20por%20envío%20de%20S/%204.90%0A%0A'); } else { stringArray.push('%20Incluido%20el%20recargo%20por%20envío%20de%20S/%204.90%0A%0A'); }\n  stringArray.push(`%20Realizaré%20el%20pago%20a%20través%20de:%20${order.paymentmethod.split(' ').join('%20')}`);\n  const urlPath = `https://api.whatsapp.com/send?phone=51994172125&text=${stringArray.reduce((a, b) => a + b)}`;\n  window.open(urlPath, '_blank').focus();\n};\n\nexport default whatsorder;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { miniIdGenerator } from '../../utilities/idgen';\nimport {\n  switchShoppingCart,\n  refreshcart,\n  switchpaymentpicker,\n  switchoverallview,\n  clearCart,\n} from '../../../redux/cart/cart';\nimport whatsorder from '../../utilities/whatsorder';\n// import whatsorder from './utilities/whatsorder';\n\nconst Overallview = () => {\n  const [confirmation, setConfirmation] = useState(false);\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.cartReducer); // data for send\n  useEffect(() => {\n    dispatch(refreshcart());\n  });\n  const sendOrderFinalStep = () => {\n    setConfirmation(true);\n  };\n  const handleBackBtn = () => {\n    dispatch(switchpaymentpicker(true));\n    dispatch(switchoverallview(false));\n  };\n  const handleBackToCartBtn = () => {\n    dispatch(switchShoppingCart(true));\n    dispatch(switchoverallview(false));\n  };\n  const handleContinueConfirmationBtn = () => {\n    dispatch(switchShoppingCart(true));\n    dispatch(switchoverallview(false));\n    whatsorder(data);\n    sessionStorage.removeItem('cartInfo');\n    dispatch(clearCart());\n  };\n  const handleBackConfirmationBtn = () => {\n    setConfirmation(false);\n  };\n  return (\n    <div>\n      {data.ordercontent.map((eh) => (\n        <div key={`${eh.header}${miniIdGenerator()}`}>\n          <div>\n            <h1>{eh.header}</h1>\n            {eh.content.map((ec) => (\n              <div key={ec.header}>\n                <h2>{ec.header}</h2>\n                {ec.content.map((ecc) => (\n                  ecc.quantity > 0\n                    ? (\n                      <h3 key={ecc.name}>\n                        {ecc.name}\n                        {' x '}\n                        {ecc.quantity}\n                      </h3>\n                    ) : ''\n                ))}\n              </div>\n            ))}\n            <footer>{eh.price}</footer>\n          </div>\n        </div>\n      ))}\n      <h1>Entrega:</h1>\n      <p>{data.orderdeliverystate ? `Envío a ${data.orderaddress}, ${data.orderinneradress}, ${data.orderaddressref}` : 'Recojo en el local'}</p>\n      <h1>Monto de compra</h1>\n      <h2>{`S/ ${parseFloat(data.orderproductsamount).toFixed(2)}`}</h2>\n      <h1>Delivery</h1>\n      <h2>{`S/ ${parseFloat(data.orderdeliveryamount).toFixed(2)}`}</h2>\n      <h1>Total</h1>\n      <h2>{`S/ ${parseFloat(data.orderamounttotal).toFixed(2)}`}</h2>\n      <button type=\"button\" onClick={() => { sendOrderFinalStep(); }}>Enviar pedido</button>\n      <button type=\"button\" onClick={() => { handleBackBtn(); }}>Volver</button>\n      <button type=\"button\" onClick={() => { handleBackToCartBtn(); }}>Volver al carro</button>\n      {confirmation\n        ? (\n          <div>\n            <h1>\n              Estas listo para enviar tu pedido?\n            </h1>\n            <h2>\n              Todos los items en el carro desaparecerán al enviar tu pedido\n            </h2>\n            <button type=\"button\" onClick={() => { handleContinueConfirmationBtn(); }}>Aceptar</button>\n            <button type=\"button\" onClick={() => { handleBackConfirmationBtn(); }}>Volver</button>\n          </div>\n        )\n        : ''}\n    </div>\n  );\n};\nexport default Overallview;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  switchShoppingCart,\n  switchCartStorePicker,\n  fillCartStorePicker,\n  switchnamepicker,\n  refreshcart,\n} from '../redux/cart/cart';\nimport Cartitempicker from './modules/shoppingcart/cartitempicker';\nimport Cartstorepicker from './modules/shoppingcart/cartstorepicker';\nimport Namepicker from './modules/shoppingcart/namepicker';\nimport Phonepicker from './modules/shoppingcart/phonepicker';\nimport Deliverstatepicker from './modules/shoppingcart/deliverstatepicker';\nimport Addresspicker from './modules/shoppingcart/addresspicker';\nimport Paymentpicker from './modules/shoppingcart/paymentpicker';\nimport Overallview from './modules/shoppingcart/overallview';\nimport { miniIdGenerator } from './utilities/idgen';\n// import whatsorder from './utilities/whatsorder';\n\nconst ShoppingCart = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.cartReducer); // data for send\n  const switchState = useSelector((state) => state.cartSwitchReducer);\n  useEffect(() => {\n    dispatch(refreshcart());\n  });\n  const handleEditClick = (param) => {\n    dispatch(fillCartStorePicker(param));\n    dispatch(switchCartStorePicker(true));\n    dispatch(switchShoppingCart(false));\n  };\n  const sendOrderStepOne = () => {\n    dispatch(switchnamepicker(true));\n    dispatch(switchShoppingCart(false));\n  };\n  return (\n    <div>\n      { switchState.shoppingcart ? (\n        <div>\n          {\n      data.ordercontent.length > 0\n        ? (\n          <div>\n            {data.ordercontent.map((eh) => (\n              <div key={`${eh.header}${miniIdGenerator()}`}>\n                <button type=\"button\" onClick={() => { handleEditClick(eh); }}>\n                  <h1>{eh.header}</h1>\n                  {eh.content.map((ec) => (\n                    <div key={ec.header}>\n                      <h2>{ec.header}</h2>\n                      {ec.content.map((ecc) => (\n                        ecc.quantity > 0\n                          ? (\n                            <h3 key={ecc.name}>\n                              {ecc.name}\n                              {' x '}\n                              {ecc.quantity}\n                            </h3>\n                          ) : ''\n                      ))}\n                    </div>\n                  ))}\n                  <footer>{eh.price}</footer>\n                </button>\n              </div>\n            ))}\n            <h1>Monto de compra</h1>\n            <h2>{`S/ ${parseFloat(data.orderproductsamount).toFixed(2)}`}</h2>\n            <h1>Delivery</h1>\n            <h2>{`S/ ${parseFloat(data.orderdeliveryamount).toFixed(2)}`}</h2>\n            <h1>Total</h1>\n            <h2>{`S/ ${parseFloat(data.orderamounttotal).toFixed(2)}`}</h2>\n            <button type=\"button\" onClick={() => { sendOrderStepOne(); }}>Enviar pedido</button>\n          </div>\n\n        ) : <Link to=\"/store\"> Aun no tienes items en tu carrito, ingresa aquí y agrégalos ya mismo!</Link>\n        }\n        </div>\n      ) : ''}\n      {switchState.cartstorepicker ? <Cartstorepicker /> : ''}\n      {switchState.cartitempicker ? <Cartitempicker /> : ''}\n      {switchState.namepicker ? <Namepicker /> : ''}\n      {switchState.phonepicker ? <Phonepicker /> : ''}\n      {switchState.deliverystatepicker ? <Deliverstatepicker /> : ''}\n      {switchState.addresspicker ? <Addresspicker /> : ''}\n      {switchState.paymentpicker ? <Paymentpicker /> : ''}\n      {switchState.overallview ? <Overallview /> : ''}\n    </div>\n  );\n};\nexport default ShoppingCart;\n","import idGenerator from '../../components/utilities/idgen';\n\n// ---------------- paths (Data) --------------------\nconst TRIGGER_STORE = 'REDUX/STORE/STORE/GET_CATEGORIES';\nconst TRIGGER_PRODUCTS = 'REDUX/STORE/STORE/TRIGGER_PRODUCTS';\nconst GET_CATEGORIES = 'REDUX/STORE/STORE/UPD_STORE';\nconst GET_PRODUCTS = 'REDUX/STORE/STORE/GET_PRODUCTS';\nconst TRIGGER_PICKER = 'REDUX/STORE/TRIGGER_PICKER';\nconst GET_PICKER = 'REDUX/STORE/GET_PICKER';\nconst SEND_ITEM_CONTENT = 'REDUX/STORE/SEND_ITEM_CONTENT';\nconst APPEND_ITEM_TO_PRODUCT = 'REDUX/STORE/APPEND_ITEM_TO_PRODUCT';\nconst BUILD_ITEM = 'REDUX/STORE/BUILD_ITEM';\nconst SET_ITEM_HEADER = 'REDUX/STORE/SET_ITEM_HEADER';\nconst SET_PRODUCT_HEADER = 'REDUX/STORE/SET_PRODUCT_HEADER';\nconst SET_FINAL_PRODUCT_HEADER = 'REDUX/STORE/SET_FINAL_PRODUCT_HEADER';\nconst CHANGE_COMPLETED_STATE = 'REDUX/STORE/CHANGE_COMPLETED_STATE';\n// ---------------- paths (Switch) --------------------\nconst SWITCH_PARENT_STATE = 'REDUX/STORE/SWITCH_PARENT_STATE';\nconst SWITCH_SECONDARY_STORE = 'REDUX/STORE/SWITCH_SECONDARY_STORE';\nconst SWITCH_STORE_PICKER = 'REDUX/STORE/SWITCH_STORE_PICKER';\nconst SWITCH_ITEM_PICKER = 'REDUX/STORE/SWITCH_ITEM_PICKER';\nconst RESET_STORE = 'REDUX/STORE/RESET_STORE';\nconst SWITCH_LOADING_1 = 'REDUX/STORE/SWITCH_LOADING_1';\nconst SWITCH_LOADING_2 = 'REDUX/STORE/SWITCH_LOADING_2';\nconst SWITCH_LOADING_3 = 'REDUX/STORE/SWITCH_LOADING_3';\n\n// ---------------- Initial state ------------\nlet firstLoadState = true;\nconst initialState = [];\n// ---------------- Actions (Data) ------------------\nconst triggerStore = (payload) => ({\n  type: TRIGGER_STORE,\n  payload,\n});\nconst updateProductsWithAPI = (payload) => ({\n  type: GET_CATEGORIES,\n  payload,\n});\nconst triggerProducts = (payload) => ({\n  type: TRIGGER_PRODUCTS,\n  payload,\n});\nconst getProducts = (payload) => ({\n  type: GET_PRODUCTS,\n  payload,\n});\nconst triggerPicker = (payload) => ({\n  type: TRIGGER_PICKER,\n  payload,\n});\nconst getPicker = (payload) => ({\n  type: GET_PICKER,\n  payload,\n});\nconst opentItemPicker = (payload) => ({\n  type: SEND_ITEM_CONTENT,\n  payload,\n});\nconst setProductHeader = (payload) => ({\n  type: SET_PRODUCT_HEADER,\n  payload,\n});\nconst changeCompletedState = (payload) => ({\n  type: CHANGE_COMPLETED_STATE,\n  payload,\n});\nconst setItemHeader = (payload) => ({\n  type: SET_ITEM_HEADER,\n  payload,\n});\nconst buildItem = (payload) => ({\n  type: BUILD_ITEM,\n  payload,\n});\nconst appendItemToProduct = (payload) => ({\n  type: APPEND_ITEM_TO_PRODUCT,\n  payload,\n});\nconst setFinalProductHeader = (payload) => ({\n  type: SET_FINAL_PRODUCT_HEADER,\n  payload,\n});\n// ---------------- Actions (Switch) ------------------\nconst switchParentState = (payload) => ({\n  type: SWITCH_PARENT_STATE,\n  payload,\n});\nconst switchSecondaryState = (payload) => ({\n  type: SWITCH_SECONDARY_STORE,\n  payload,\n});\nconst switchStorePicker = (payload) => ({\n  type: SWITCH_STORE_PICKER,\n  payload,\n});\nconst switchItemPicker = (payload) => ({\n  type: SWITCH_ITEM_PICKER,\n  payload,\n});\nconst resetStore = () => ({\n  type: RESET_STORE,\n});\nconst loadingSwitch1 = (payload) => ({\n  type: SWITCH_LOADING_1,\n  payload,\n});\nconst loadingSwitch2 = (payload) => ({\n  type: SWITCH_LOADING_2,\n  payload,\n});\nconst loadingSwitch3 = (payload) => ({\n  type: SWITCH_LOADING_3,\n  payload,\n});\n\n// ----------------- SWITCH --------------\n// ----------------- REDUCERS ------------\nconst storeSwitchDefaultState = {\n  parentState: true,\n  secondaryStoreState: false,\n  storePickerState: false,\n  itemPickerState: false,\n  loading1State: false,\n  loading2State: false,\n  loading3State: false,\n};\nconst storeSwitchReducer = (state = storeSwitchDefaultState, action) => {\n  const storeState = {\n    parentState: state.parentState,\n    secondaryStoreState: state.secondaryStoreState,\n    storePickerState: state.storePickerState,\n    itemPickerState: state.itemPickerState,\n    loading1State: state.loading1State,\n    loading2State: state.loading2State,\n    loading3State: state.loading3State,\n  };\n  switch (action.type) {\n    case SWITCH_PARENT_STATE:\n      storeState.parentState = action.payload;\n      return storeState;\n    case SWITCH_SECONDARY_STORE:\n      storeState.secondaryStoreState = action.payload;\n      return storeState;\n    case SWITCH_STORE_PICKER:\n      storeState.storePickerState = action.payload;\n      return storeState;\n    case SWITCH_ITEM_PICKER:\n      storeState.itemPickerState = action.payload;\n      return storeState;\n    case SWITCH_LOADING_1:\n      storeState.loading1State = action.payload;\n      return storeState;\n    case SWITCH_LOADING_2:\n      storeState.loading2State = action.payload;\n      return storeState;\n    case SWITCH_LOADING_3:\n      storeState.loading3State = action.payload;\n      return storeState;\n    case RESET_STORE:\n      return storeSwitchDefaultState;\n    default:\n      return state;\n  }\n};\n\n// ----------------- STORE MAIN --------------\n// ----------------- REDUCERS ------------\nconst storemainReducer = (state = initialState, action) => {\n  const actionPayload = action.payload;\n  switch (action.type) {\n    case TRIGGER_STORE:\n      return state;\n    case GET_CATEGORIES:\n      return actionPayload;\n    default:\n      return state;\n  }\n};\nconst storeSecondaryReducer = (state = initialState, action) => {\n  const actionPayload = action.payload;\n  switch (action.type) {\n    case TRIGGER_PRODUCTS:\n      return initialState;\n    case GET_PRODUCTS:\n      return actionPayload;\n    default:\n      return state;\n  }\n};\nconst storePickerReducer = (state = initialState, action) => {\n  const actionPayload = action.payload;\n  const activeState = state;\n  const activeContent = state.content;\n  const replaceCompletedState = (name) => {\n    for (let i = 0; i < activeContent.length; i += 1) {\n      if (activeContent[i].name === name) {\n        activeContent[i].completed = true;\n      }\n    }\n  };\n  switch (action.type) {\n    case SET_PRODUCT_HEADER:\n      return {\n        header: actionPayload.header,\n        price: actionPayload.price,\n        content: [],\n      };\n    case GET_PICKER:\n      activeState.content = actionPayload;\n      return {\n        header: activeState.header,\n        content: activeState.content,\n        price: activeState.price,\n      };\n    case CHANGE_COMPLETED_STATE:\n      replaceCompletedState(action.payload);\n      return {\n        header: activeState.header,\n        content: activeContent,\n        price: activeState.price,\n      };\n    default:\n      return state;\n  }\n};\nconst itemPickerReducer = (state = initialState, action) => {\n  const actionPayload = action.payload;\n  switch (action.type) {\n    case SET_ITEM_HEADER:\n      return {\n        header: actionPayload,\n        content: [],\n      };\n    case SEND_ITEM_CONTENT:\n      return {\n        header: state.header,\n        content: actionPayload,\n      };\n    default:\n      return state;\n  }\n};\nconst itemBuildReducer = (state = initialState, action) => {\n  const activeState = state;\n  const actionPayload = action.payload;\n  switch (action.type) {\n    case BUILD_ITEM:\n      activeState.content = actionPayload;\n      return activeState;\n    default:\n      return state;\n  }\n};\nconst productBuildReducer = (state = initialState, action) => {\n  const load = action.payload;\n  const tester = () => {\n    const arrayToTest = [...state.content];\n    if (arrayToTest.length > 0) {\n      for (let i = 0; i < arrayToTest.length; i += 1) {\n        if (arrayToTest[i].header === load.header) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const replaceData = (toRep) => {\n    const arrayToRep = [...state.content];\n    for (let i = 0; i < arrayToRep.length; i += 1) {\n      if (arrayToRep[i].header === toRep.header) {\n        arrayToRep[i].content = toRep.content;\n      }\n    }\n    return arrayToRep;\n  };\n  switch (action.type) {\n    case SET_FINAL_PRODUCT_HEADER:\n      return {\n        header: action.payload.header,\n        price: action.payload.price,\n        code: idGenerator(),\n        content: [],\n      };\n    case APPEND_ITEM_TO_PRODUCT:\n      if (tester()) {\n        return {\n          header: state.header,\n          price: state.price,\n          code: state.code,\n          content: replaceData(load),\n        };\n      }\n      return {\n        header: state.header,\n        price: state.price,\n        code: state.code,\n        content: [...state.content, load],\n      };\n\n    default:\n      return state;\n  }\n};\n// ---------------- Middlewares and Side Effects --------------\nconst getCategoriesFromAPIMiddleware = (store) => (next) => (action) => {\n  if (action.type === TRIGGER_STORE) {\n    if (firstLoadState) {\n      store.dispatch(loadingSwitch1(true));\n      firstLoadState = false;\n      fetch('/getCategories', {\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      }).then((response) => response.json())\n        .then((json) => store.dispatch(updateProductsWithAPI(json)));\n    }\n  }\n  next(action);\n};\nconst getProductsFromAPIMiddleware = (store) => (next) => (action) => {\n  if (action.type === TRIGGER_PRODUCTS) {\n    store.dispatch(loadingSwitch2(true));\n    fetch(`/getProdWithId/${action.payload}`, {\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then((response) => response.json())\n      .then((json) => store.dispatch(getProducts(json)));\n  }\n  next(action);\n};\nconst getItemsFromAPIMiddleware = (store) => (next) => (action) => {\n  if (action.type === SET_PRODUCT_HEADER) {\n    store.dispatch(loadingSwitch3(true));\n    fetch(`/getItemWithId/${action.payload.id}`, {\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then((response) => response.json())\n      .then((json) => store.dispatch(getPicker(json)));\n  }\n  next(action);\n};\nconst addItemToProductMiddleware = (store) => (next) => (action) => {\n  if (action.type === BUILD_ITEM) {\n    store.dispatch(appendItemToProduct(action.payload));\n  }\n  next(action);\n};\nconst addFinalProductHeaderMiddleware = (store) => (next) => (action) => {\n  if (action.type === SET_PRODUCT_HEADER) {\n    store.dispatch(setFinalProductHeader({\n      header: action.payload.header,\n      price: action.payload.price,\n    }));\n  }\n  next(action);\n};\nconst loadingScreensMiddleware = (store) => (next) => (action) => {\n  if (action.type === GET_CATEGORIES) {\n    store.dispatch(loadingSwitch1(false));\n  } else if (action.type === GET_PRODUCTS) {\n    store.dispatch(loadingSwitch2(false));\n  } else if (action.type === GET_PICKER) {\n    store.dispatch(loadingSwitch3(false));\n  }\n  next(action);\n};\n// ---------------- Exports --------------\nexport {\n  // ------ Reducers -------\n  storeSwitchReducer,\n  storemainReducer,\n  storeSecondaryReducer,\n  storePickerReducer,\n  itemPickerReducer,\n  itemBuildReducer,\n  productBuildReducer,\n  // ------ Actions (Switch) --------\n  switchParentState,\n  switchSecondaryState,\n  switchStorePicker,\n  switchItemPicker,\n  resetStore,\n  loadingSwitch1,\n  loadingSwitch2,\n  loadingSwitch3,\n  // ------ Actions (Data) --------\n  triggerStore,\n  triggerProducts,\n  triggerPicker,\n  getProducts,\n  getPicker,\n  updateProductsWithAPI,\n  opentItemPicker,\n  setProductHeader,\n  buildItem,\n  setItemHeader,\n  changeCompletedState,\n  // ---- Middlewares -----\n  getCategoriesFromAPIMiddleware,\n  getProductsFromAPIMiddleware,\n  getItemsFromAPIMiddleware,\n  addItemToProductMiddleware,\n  addFinalProductHeaderMiddleware,\n  loadingScreensMiddleware,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  resetStore,\n  setProductHeader,\n  switchSecondaryState,\n  switchStorePicker,\n} from '../../../redux/store/store';\n\nconst Storesecondary = () => {\n  const secondaryData = useSelector((state) => state.storeSecondaryReducer);\n  const switchState = useSelector((state) => state.storeSwitchReducer);\n  const dispatch = useDispatch();\n  const handleClick = (data) => {\n    dispatch(switchSecondaryState(false));\n    dispatch(switchStorePicker(true));\n    dispatch(setProductHeader(data));\n  };\n  const HandleBackBtn = () => {\n    dispatch(resetStore());\n  };\n  return (\n    <div>\n      {switchState.loading2State ? <div><h1>Loading...</h1></div> : (\n        <div className=\"store_secondary_container\">\n          <div>\n            <div>StoreSecondary</div>\n            {secondaryData.map((data) => (\n              <button key={data.nombre} type=\"button\" onClick={() => { handleClick({ id: data.idproductos, header: data.nombre, price: data.precio }); }}>{data.nombre}</button>\n            ))}\n            <button type=\"button\" onClick={() => { HandleBackBtn(); }}>Volver</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Storesecondary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  opentItemPicker,\n  resetStore,\n  setItemHeader,\n  switchItemPicker,\n  switchSecondaryState,\n  switchStorePicker,\n} from '../../../redux/store/store';\nimport { buildProduct } from '../../../redux/cart/cart';\n\nconst Storepicker = () => {\n  const dispatch = useDispatch();\n  const pickerData = useSelector((state) => state.storePickerReducer);\n  const productBuild = useSelector(((state) => state.productBuildReducer));\n  const switchState = useSelector((state) => state.storeSwitchReducer);\n  const handleClick2 = (info, header) => {\n    dispatch(switchStorePicker(false));\n    dispatch(setItemHeader(header));\n    dispatch(opentItemPicker(info));\n    dispatch(switchItemPicker(true));\n  };\n  const checkAll = (array) => {\n    for (let i = 0; i < array.length; i += 1) {\n      if (!array[i].completed) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleAddProductToCart = () => {\n    if (checkAll(pickerData.content)) {\n      dispatch(resetStore());\n      dispatch(buildProduct(productBuild));\n      return (<Redirect push to=\"/store\" />);\n    }\n    return false;\n  };\n  const handleBackBtn = () => {\n    dispatch(switchStorePicker(false));\n    dispatch(switchSecondaryState(true));\n  };\n  return (\n    <div>\n      {switchState.loading3State ? <div><h1>Loading...</h1></div> : (\n        <div className=\"store_picker_container\">\n          <div>\n            <div>StorePicker</div>\n            {pickerData.content.map((data) => (\n              <div key={data.name}>\n                <button\n                  className={data.completed ? 'completed_btn' : 'uncompleted_btn'}\n                  type=\"button\"\n                  onClick={() => {\n                    handleClick2(data, data.name);\n                  }}\n                >\n                  {data.name}\n                </button>\n              </div>\n            ))}\n            {checkAll(pickerData.content) ? (<Link to=\"/shop\" onClick={() => handleAddProductToCart()}>Agregar al carrito</Link>) : (<button type=\"button\" onClick={() => handleAddProductToCart()}>Agregar al carrito</button>) }\n            <button type=\"button\" onClick={() => handleBackBtn()}>Volver</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Storepicker;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  buildItem,\n  changeCompletedState,\n  switchItemPicker,\n  switchStorePicker,\n} from '../../../redux/store/store';\n\nconst Itempicker = () => {\n  const dispatch = useDispatch();\n  const itemData = useSelector((state) => state.itemPickerReducer);\n  const productBuild = useSelector((state) => state.productBuildReducer);\n  const [completedFields, setCompleted] = useState(false);\n  const [itemsCounter, setCounter] = useState(parseInt(itemData.content.indexes.cantidad, 10));\n  const [uncompleteAlert, setUncAlert] = useState(false);\n  const tester = () => {\n    const arrayToTest = [...productBuild.content];\n    if (arrayToTest.length > 0) {\n      for (let i = 0; i < arrayToTest.length; i += 1) {\n        if (arrayToTest[i].header === itemData.header) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  useEffect(() => {\n    if (tester()) {\n      const allInputs = document.querySelectorAll(`.${itemData.content.name.split(' ').join('_')}`);\n      const arrayToSample = [...productBuild.content];\n      let allPreviousValues = [];\n      for (let i = 0; i < arrayToSample.length; i += 1) {\n        if (arrayToSample[i].header === itemData.header) {\n          allPreviousValues = arrayToSample[i].content;\n        }\n      }\n      for (let x = 0; x < allInputs.length; x += 1) {\n        for (let i = 0; i < allPreviousValues.length; i += 1) {\n          if (itemData.content.content[x].nombre === allPreviousValues[i].name) {\n            allInputs[x].value = allPreviousValues[i].quantity;\n          }\n        }\n      }\n      setCounter(0);\n      setCompleted(true);\n    }\n  }, []);\n  const handleUpClick = (key, ref) => {\n    const input = document.getElementById(ref);\n    const allInput = document.querySelectorAll(`.${key}`);\n    const allInputArray = [];\n    allInput.forEach((e) => {\n      allInputArray.push(parseInt(e.value, 10));\n    });\n    const sumValue = allInputArray.reduce((a, b) => a + b);\n    const maxValue = parseInt(itemData.content.indexes.cantidad, 10);\n    const factor = parseInt(itemData.content.indexes.factor, 10);\n    if (sumValue < maxValue) {\n      setCounter(itemsCounter - factor);\n      input.value = parseInt(input.value, 10) + factor;\n      if (maxValue - sumValue === factor) {\n        setCompleted(true);\n      }\n    }\n  };\n  const handleDownClick = (ref) => {\n    const input = document.getElementById(ref);\n    const factor = parseInt(itemData.content.indexes.factor, 10);\n    if (parseInt(input.value, 10) > 0) {\n      setCounter(itemsCounter + factor);\n      input.value = parseInt(input.value, 10) - parseInt(itemData.content.indexes.factor, 10);\n      setCompleted(false);\n    }\n  };\n  const handleAddClick = (key) => {\n    if (completedFields) {\n      const nameTitle = document.querySelectorAll('#sub_item_name');\n      const nameDescr = document.querySelectorAll('#sub_item_description');\n      const quantityInput = document.querySelectorAll(`.${key}`);\n      const nameTitleArray = [];\n      for (let i = 0; i < nameTitle.length; i += 1) {\n        nameTitleArray.push({\n          name: nameTitle[i].innerHTML,\n          quantity: parseInt(quantityInput[i].value, 10),\n          description: nameDescr[i].innerHTML,\n          codename: quantityInput[i].id,\n        });\n      }\n      const objectForSend = {\n        header: itemData.header,\n        content: nameTitleArray,\n        completed: true,\n        maxvalue: parseInt(itemData.content.indexes.cantidad, 10),\n        factor: parseInt(itemData.content.indexes.factor, 10),\n      };\n      dispatch(buildItem(objectForSend));\n      dispatch(switchItemPicker(false));\n      dispatch(switchStorePicker(true));\n      dispatch(changeCompletedState(itemData.header));\n    } else {\n      setUncAlert(true);\n    }\n  };\n  const handleBackBtn = () => {\n    dispatch(switchItemPicker(false));\n    dispatch(switchStorePicker(true));\n  };\n  return (\n    <div>\n      <h1>\n        Elige tus\n        {' '}\n        {itemData.header}\n      </h1>\n      {itemData.content.content.map((innerdata) => (\n        <div key={innerdata.nombre}>\n          <h1 id=\"sub_item_name\">\n            {innerdata.nombre}\n          </h1>\n          <p id=\"sub_item_description\">{innerdata.descripcion}</p>\n          <div>\n            <input className={itemData.content.name.split(' ').join('_')} id={innerdata.codename} type=\"number\" defaultValue={0} />\n            <div>\n              <button type=\"button\" onClick={() => { handleUpClick(itemData.content.name.split(' ').join('_'), innerdata.codename); }}>Up</button>\n              <button type=\"button\" onClick={() => { handleDownClick(innerdata.codename); }}>Down</button>\n            </div>\n          </div>\n        </div>\n      ))}\n      <div>{completedFields ? 'Completed' : `Tienes ${itemsCounter} por escoger`}</div>\n      {uncompleteAlert ? (<div>Background</div>) : ''}\n      {uncompleteAlert ? (<div onClick={() => { setUncAlert(false); }}><h1>Aun tienes items por escoger!</h1></div>) : ''}\n      <button type=\"button\" onClick={() => { handleAddClick(itemData.content.name.split(' ').join('_')); }}>Aceptar</button>\n      <button type=\"button\" onClick={() => handleBackBtn()}>Volver</button>\n    </div>\n  );\n};\n\nexport default Itempicker;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  switchParentState,\n  switchSecondaryState,\n  triggerProducts,\n  triggerStore,\n} from '../../../redux/store/store';\nimport Storesecondary from './storesecondary';\nimport Storepicker from './storepicker';\nimport Itempicker from './itempicker';\n\nconst Storemain = () => {\n  const dispatch = useDispatch();\n  const productData = useSelector((state) => state.storemainReducer);\n  const switchState = useSelector((state) => state.storeSwitchReducer);\n  const [parentState,\n    secondaryStoreState,\n    storePickerState,\n    itemPickerState] = [\n    switchState.parentState,\n    switchState.secondaryStoreState,\n    switchState.storePickerState,\n    switchState.itemPickerState,\n  ];\n  useEffect(() => {\n    dispatch(triggerStore([]));\n    dispatch(switchParentState(true));\n  }, []);\n  const handleClick = (key) => {\n    dispatch(switchParentState(false));\n    dispatch(triggerProducts(key));\n    dispatch(switchSecondaryState(true));\n  };\n  return (\n    <div>\n      {switchState.loading1State ? <div><h1>Loading</h1></div> : (\n        <div className=\"store_main_container\">\n          {parentState\n            ? (\n              <div>\n                {productData.map((data) => (\n                  <button type=\"button\" key={data.nombre} onClick={() => handleClick(data.idcategorias)}>{data.nombre}</button>\n                ))}\n              </div>\n            ) : false}\n\n          {secondaryStoreState\n            ? (\n              <Storesecondary />\n            ) : false}\n          {storePickerState\n            ? (\n              <Storepicker />\n            ) : false}\n          {itemPickerState\n            ? (\n              <Itempicker />\n            ) : false}\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Storemain;\n","import React from 'react';\nimport Storemain from './modules/store/storemain';\n\nconst Store = () => (\n  <div id=\"Products\">\n    <Storemain />\n  </div>\n);\n\nexport default Store;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport HomePage from './components/homepage';\nimport ShoppingCart from './components/shoppingcart';\nimport Store from './components/store';\nimport { resetCartSwitch } from './redux/cart/cart';\nimport { resetStore } from './redux/store/store';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const handleStoreCloseClick = () => {\n    dispatch(resetStore());\n    dispatch(resetCartSwitch());\n  };\n  return (\n    <Router>\n      <div className=\"hello\">\n        <h1>Makit App</h1>\n      </div>\n      <div className=\"switch\">\n        <div className=\"switch_header\">\n          <ul className=\"nav-bar\">\n            <li className=\"nav-bar-li\">\n              <Link onClick={() => { handleStoreCloseClick(); }} to=\"/home\">Home</Link>\n            </li>\n            <li className=\"nav-bar-li\">\n              <Link onClick={() => { handleStoreCloseClick(); }} to=\"/store\">Store</Link>\n            </li>\n            <li className=\"nav-bar-li\">\n              <Link onClick={() => { handleStoreCloseClick(); }} to=\"/shop\">Shoping Cart</Link>\n            </li>\n          </ul>\n        </div>\n        <Switch>\n          <Route path=\"/home\">\n            <HomePage />\n          </Route>\n          <Route path=\"/store\">\n            <Store />\n          </Route>\n          <Route path=\"/shop\">\n            <ShoppingCart />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import {\n  createStore, compose, combineReducers, applyMiddleware,\n} from 'redux';\nimport logger from 'redux-logger';\n// ----------- STORE IMPORTS -----------\nimport {\n  // --- Reducers --\n  storeSwitchReducer,\n  storemainReducer,\n  storeSecondaryReducer,\n  storePickerReducer,\n  itemPickerReducer,\n  itemBuildReducer,\n  productBuildReducer,\n  // --- Middlewares --\n  getCategoriesFromAPIMiddleware,\n  getProductsFromAPIMiddleware,\n  getItemsFromAPIMiddleware,\n  addItemToProductMiddleware,\n  addFinalProductHeaderMiddleware,\n  loadingScreensMiddleware,\n} from './store/store';\n// ----------- CART IMPORTS -----------\nimport {\n  // --- Reducers --\n  cartReducer,\n  cartSwitchReducer,\n  cartStorePickerReducer,\n  cartItemPickerReducer,\n  // --- Middlewares --\n  saveCartInfoMiddleware,\n} from './cart/cart';\n\nconst reducer = combineReducers({\n  // ------------ Store Reducers -----\n  storeSwitchReducer,\n  storemainReducer,\n  storeSecondaryReducer,\n  storePickerReducer,\n  itemPickerReducer,\n  itemBuildReducer,\n  productBuildReducer,\n  // ----------- Cart Reducers ------\n  cartReducer,\n  cartSwitchReducer,\n  cartStorePickerReducer,\n  cartItemPickerReducer,\n});\n\nconst composedEnhancer = compose(\n  // ------------ Store Middlewares -----\n  applyMiddleware(getCategoriesFromAPIMiddleware),\n  applyMiddleware(getProductsFromAPIMiddleware),\n  applyMiddleware(getItemsFromAPIMiddleware),\n  applyMiddleware(addItemToProductMiddleware),\n  applyMiddleware(addFinalProductHeaderMiddleware),\n  applyMiddleware(loadingScreensMiddleware),\n  // ------------ Cart Middlewares -----\n  applyMiddleware(saveCartInfoMiddleware),\n  // ------------- Logger --------------\n  applyMiddleware(logger),\n);\n\nconst store = createStore(\n  reducer,\n  undefined,\n  composedEnhancer,\n);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/configureStore';\nimport './styles/_login.scss';\nimport './styles/_store.scss';\nimport './styles/_main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}