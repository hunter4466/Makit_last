{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","callBackendAPI","a","fetch","response","json","body","status","Error","message","console","log","state","data","componentDidMount","bind","this","then","res","setState","className","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAwCeA,E,kDApCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAcJC,eAfe,sBAeE,8BAAAC,EAAA,sEACQC,MAAM,YADd,cACTC,EADS,gBAEIA,EAASC,OAFb,UAETC,EAFS,OAGS,MAApBF,EAASG,OAHE,sBAIPC,MAAMF,EAAKG,SAJJ,cAMfC,QAAQC,IAAIL,GANG,kBAORA,GAPQ,4CAbnB,EAAKM,MAAQ,CACXC,KAAM,MAER,EAAKC,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKd,eAAiB,EAAKA,eAAec,KAApB,gBANL,E,qDASnB,WAAqB,IAAD,OAClBC,KAAKf,iBACFgB,MAAK,SAACC,GAAD,OAAS,EAAKC,SAAS,CAAEN,KAAMK,EAAIL,Y,oBAczC,WACE,IAAMN,EAASS,KAAKJ,MACpB,OACE,sBAAKQ,UAAU,QAAf,UACE,6CACA,6BAAKb,EAAOM,c,GA/BNQ,aCWHC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAEnB,IADLQ,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d0e7aa15.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n    };\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.callBackendAPI = this.callBackendAPI.bind(this);\n  }\n\n  componentDidMount() {\n    this.callBackendAPI()\n      .then((res) => this.setState({ data: res.data }));\n  }\n\n  // fetching the GET route from the Express server which matches the GET route from server.js\n      callBackendAPI = async () => {\n        const response = await fetch('/getData');\n        const body = await response.json();\n        if (response.status !== 200) {\n          throw Error(body.message);\n        }\n        console.log(body);\n        return body;\n      };\n\n      render() {\n        const status = this.state;\n        return (\n          <div className=\"hello\">\n            <h1>hello world</h1>\n            <h1>{status.data}</h1>\n          </div>\n        );\n      }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/_calculator.scss';\nimport './styles/_home.scss';\nimport './styles/_quote.scss';\nimport './styles/_main.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log)\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}