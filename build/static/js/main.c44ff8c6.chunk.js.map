{"version":3,"sources":["components/homepage.js","components/utilities/idgen.js","redux/cart/cart.js","components/modules/shoppingcart/cartitempicker.js","components/modules/shoppingcart/cartstorepicker.js","components/utilities/whatsorder.js","components/shoppingcart.js","redux/store/store.js","components/modules/store/storesecondary.js","components/modules/store/storepicker.js","components/modules/store/itempicker.js","components/modules/store/storemain.js","components/store.js","App.js","redux/configureStore.js","index.js"],"names":["HomePage","useState","address","setAddress","handleSelect","value","a","to","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","description","idGenerator","s4","Math","floor","random","toString","substring","guid","APPEND_PRODUCT_TO_CART","SWITCH_SHOPPING_CART","SWITCH_CART_STORE_PICKER","SWITCH_CART_ITEM_PICKER","FILL_CART_STORE_PICKER","MODIFY_PRODUCT_FROM_CART","FILL_CART_ITEM_PICKER","RESET_CART_SWITCH","CART_STORE_REPLACEMENT_ACTION","MODIFY_DELIVERY_STATE_AND_VALUE","switchShoppingCart","payload","type","switchCartStorePicker","switchCartItemPicker","cartSwitchInitialState","shoppingcart","cartstorepicker","cartitempicker","cartReducerInitialState","ordercontent","customerid","customername","customerphone","code","orderaddress","orderaddressref","orderproductsamount","orderamounttotal","orderdeliverystate","orderdeliveryamount","paymentmethod","orderregisterdate","orderdeliverdate","orderregistertime","orderdelivertime","Cartitempicker","dispatch","useDispatch","itemData","useSelector","state","cartItemPickerReducer","completedFields","setCompleted","itemsCounter","setCounter","uncompleteAlert","setUncAlert","useEffect","handleAddClick","key","nameTitle","document","querySelectorAll","nameDescr","quantityInput","nameTitleArray","i","length","push","name","innerHTML","quantity","parseInt","codename","id","objectForSend","header","content","completed","maxvalue","factor","innerdata","className","split","join","defaultValue","onClick","ref","input","getElementById","allInput","allInputArray","forEach","e","sumValue","reduce","b","maxValue","handleUpClick","handleDownClick","Cartstorepicker","pickerData","cartStorePickerReducer","handleClick","info","handleAddProductToCart","array","checkAll","data","capitalizeFirstLetter","string","charAt","toUpperCase","slice","whatsorder","order","stringArray","elem","elemsub","elemsubsub","urlPath","window","open","focus","ShoppingCart","cartReducer","switchState","cartSwitchReducer","handleEditClick","param","eh","ec","ecc","price","parseFloat","toFixed","TRIGGER_STORE","TRIGGER_PRODUCTS","GET_CATEGORIES","GET_PRODUCTS","GET_PICKER","SEND_ITEM_CONTENT","APPEND_ITEM_TO_PRODUCT","BUILD_ITEM","SET_ITEM_HEADER","SET_PRODUCT_HEADER","SET_FINAL_PRODUCT_HEADER","CHANGE_COMPLETED_STATE","SWITCH_PARENT_STATE","SWITCH_SECONDARY_STORE","SWITCH_STORE_PICKER","SWITCH_ITEM_PICKER","RESET_STORE","firstLoadState","initialState","switchParentState","switchSecondaryState","switchStorePicker","switchItemPicker","resetStore","storeSwitchDefaultState","parentState","secondaryStoreState","storePickerState","itemPickerState","Storesecondary","secondaryData","storeSecondaryReducer","idproductos","nombre","precio","Storepicker","storePickerReducer","productBuild","productBuildReducer","handleClick2","opentItemPicker","Itempicker","itemPickerReducer","indexes","cantidad","arrayToTest","tester","allInputs","arrayToSample","allPreviousValues","x","changeCompletedState","descripcion","Storemain","productData","storemainReducer","storeSwitchReducer","idcategorias","Store","App","handleStoreCloseClick","path","reducer","combineReducers","action","storeState","actionPayload","activeState","activeContent","replaceCompletedState","itemBuildReducer","load","replaceData","toRep","arrayToRep","productsArray","stateObject","sumProducts","priceValue","filter","replaceFunction","stateArray","newArray","composedEnhancer","compose","applyMiddleware","store","next","fetch","headers","then","response","json","logger","createStore","undefined","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c44ff8c6.chunk.js","sourcesContent":["/* eslint-disable arrow-body-style */\n/* eslint-disable indent */\n/* eslint-disable semi */\n/* eslint-disable react/jsx-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nconst HomePage = () => {\n  const [address, setAddress] = useState('');\n  const handleSelect = async (value) => {};\n\n  return (\n    <div>\n      <Link to=\"/store\"> Toca aquí y empieza tu pedido ya mismo!</Link>\n      <PlacesAutocomplete\n        value={address}\n        onChange={setAddress}\n        onSelect={handleSelect}\n      >\n        {({\n          getInputProps, suggestions, getSuggestionItemProps, loading,\n        }) => (\n          <div>\n            <input {...getInputProps({ placeholder: 'Type address' })} />\n            <div>\n              {loading ? <div>...loading</div> : null}\n\n              {suggestions.map((suggestion) => {\n                const style = {\n                  backgroundColor: suggestion.active ? '#41b6e6' : '#fff',\n                }\n              return (\n                <div {...getSuggestionItemProps(\n                suggestion,\n                { style },\n                )}\n                >\n                  {suggestion.description}\n                </div>\n)\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n\n    </div>\n  );\n};\nexport default HomePage;\n// https://maps.googleapis.com/maps/api/js?key=AIzaSyA4gO4y4GUGVf3deiUQkiHdGsD2LcIVAoc&libraries=places&callback=initMap&channel=GMPSB_addressselection_v1_cAB\n","const idGenerator = () => {\n  const guid = () => {\n    const s4 = () => Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n    return `${s4() + s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n  };\n  const newKey = guid();\n  return newKey;\n};\n\nconst miniIdGenerator = () => {\n  const guid = () => {\n    const s4 = () => Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n    return `${s4() + s4()}-${s4()}`;\n  };\n  const newKey = guid();\n  return newKey;\n};\n\nexport default idGenerator;\nexport { miniIdGenerator };\n","import idGenerator from '../../components/utilities/idgen';\n\n// ---------------- paths --------------------\nconst APPEND_PRODUCT_TO_CART = 'REDUX/CART/APPEND_PRODUCT_TO_CART';\nconst SWITCH_SHOPPING_CART = 'REDUX/CART/SWITCH_SHOPPING_CART';\nconst SWITCH_CART_STORE_PICKER = 'REDUX/CART/SWITCH_CART_STORE_PICKER';\nconst SWITCH_CART_ITEM_PICKER = 'REDUX/CART/SWITCH_CART_ITEM_PICKER';\nconst FILL_CART_STORE_PICKER = 'REDUX/CART/FILL_CART_STORE_PICKER';\nconst MODIFY_PRODUCT_FROM_CART = 'REDUX/CART/MODIFY_PRODUCT_FROM_CART';\nconst FILL_CART_ITEM_PICKER = 'REDUX/CART/FILL_CART_ITEM_PICKER';\nconst RESET_CART_SWITCH = 'REDUX/CART/RESET_CART_SWITCH';\nconst CART_STORE_REPLACEMENT_ACTION = 'REDUX/CART/CART_STORE_REPLACEMENT_ACTION';\nconst MODIFY_DELIVERY_STATE_AND_VALUE = 'REDUX/CART/MODIFY_DELIVERY_STATE_AND_VALUE';\n// ---------------- Actions ------------------\nconst buildProduct = (payload) => ({\n  type: APPEND_PRODUCT_TO_CART,\n  payload,\n});\nconst switchShoppingCart = (payload) => ({\n  type: SWITCH_SHOPPING_CART,\n  payload,\n});\nconst switchCartStorePicker = (payload) => ({\n  type: SWITCH_CART_STORE_PICKER,\n  payload,\n});\nconst switchCartItemPicker = (payload) => ({\n  type: SWITCH_CART_ITEM_PICKER,\n  payload,\n});\nconst fillCartStorePicker = (payload) => ({\n  type: FILL_CART_STORE_PICKER,\n  payload,\n});\nconst fillCartItemPicker = (payload) => ({\n  type: FILL_CART_ITEM_PICKER,\n  payload,\n});\nconst modifyProductFromCart = (payload) => ({\n  type: MODIFY_PRODUCT_FROM_CART,\n  payload,\n});\nconst resetCartSwitch = () => ({\n  type: RESET_CART_SWITCH,\n});\nconst cartStoreReplacementAction = (payload) => ({\n  type: CART_STORE_REPLACEMENT_ACTION,\n  payload,\n});\nconst modifiDeliveryStateAndValue = (payload) => ({\n  type: MODIFY_DELIVERY_STATE_AND_VALUE,\n  payload,\n});\n// ----------------- Switch Reducers -----------\n// ---------------- Reducers ------------------\nconst cartSwitchInitialState = {\n  shoppingcart: true,\n  cartstorepicker: false,\n  cartitempicker: false,\n};\nconst cartSwitchReducer = (state = cartSwitchInitialState, action) => {\n  const activeState = {\n    shoppingcart: state.shoppingcart,\n    cartstorepicker: state.cartstorepicker,\n    cartitempicker: state.cartitempicker,\n  };\n  switch (action.type) {\n    case SWITCH_SHOPPING_CART:\n      activeState.shoppingcart = action.payload;\n      return activeState;\n    case SWITCH_CART_STORE_PICKER:\n      activeState.cartstorepicker = action.payload;\n      return activeState;\n    case SWITCH_CART_ITEM_PICKER:\n      activeState.cartitempicker = action.payload;\n      return activeState;\n    case RESET_CART_SWITCH:\n      return cartSwitchInitialState;\n    default:\n      return state;\n  }\n};\nconst cartReducerInitialState = {\n  ordercontent: [],\n  customerid: null,\n  customername: 'Nombre Prueba',\n  customerphone: null,\n  code: `order_${idGenerator()}`,\n  orderaddress: 'Calle Prueba 615',\n  orderaddressref: 'Referencia de prueba',\n  orderproductsamount: null,\n  orderamounttotal: null,\n  orderdeliverystate: false,\n  orderdeliveryamount: 0,\n  paymentmethod: 'PagoLink VISA',\n  orderregisterdate: null,\n  orderdeliverdate: false,\n  orderregistertime: null,\n  orderdelivertime: null,\n};\nconst cartReducer = (state = cartReducerInitialState, action) => {\n  const productsArray = state.ordercontent;\n  const stateObject = state;\n  const sumProducts = (array) => {\n    let priceValue = 0;\n    for (let i = 0; i < array.length; i += 1) {\n      priceValue = parseFloat(priceValue) + parseFloat(array[i].price);\n    }\n    return priceValue;\n  };\n  switch (action.type) {\n    case APPEND_PRODUCT_TO_CART:\n      productsArray.push(action.payload);\n      stateObject.ordercontent = productsArray;\n      stateObject.orderproductsamount = sumProducts(productsArray);\n      stateObject.orderamounttotal = sumProducts(productsArray)\n      + parseFloat(stateObject.orderdeliveryamount);\n      return stateObject;\n    case MODIFY_PRODUCT_FROM_CART:\n      stateObject.ordercontent = productsArray.filter((e) => e.code !== action.payload.code);\n      stateObject.ordercontent.push(action.payload);\n      return stateObject;\n    case MODIFY_DELIVERY_STATE_AND_VALUE:\n      stateObject.orderdeliverdate = true;\n      stateObject.orderdeliveryamount = parseFloat(action.payload);\n      stateObject.orderamounttotal = sumProducts(productsArray)\n      + parseFloat(stateObject.orderdeliveryamount);\n      return stateObject;\n    default:\n      return state;\n  }\n};\nconst cartStorePickerReducer = (state = [], action) => {\n  const replaceFunction = () => {\n    const stateArray = [...state.content];\n    const newArray = [];\n    for (let i = 0; i < stateArray.length; i += 1) {\n      if (stateArray[i].header === action.payload.header) {\n        newArray.push(action.payload);\n      } else {\n        newArray.push(stateArray[i]);\n      }\n    }\n    return newArray;\n  };\n  switch (action.type) {\n    case FILL_CART_STORE_PICKER:\n      return action.payload;\n    case CART_STORE_REPLACEMENT_ACTION:\n      return {\n        header: state.header,\n        price: state.price,\n        code: state.code,\n        content: replaceFunction(),\n      };\n    default:\n      return state;\n  }\n};\nconst cartItemPickerReducer = (state = [], action) => {\n  switch (action.type) {\n    case FILL_CART_ITEM_PICKER:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// ---------------- Middlewares and Side Effects --------------\n// ---------------- Exports --------------\nexport {\n  // ------ Reducers -------\n  cartReducer,\n  cartSwitchReducer,\n  cartStorePickerReducer,\n  cartItemPickerReducer,\n  // ------ Actions --------\n  buildProduct,\n  switchShoppingCart,\n  switchCartStorePicker,\n  switchCartItemPicker,\n  fillCartStorePicker,\n  modifyProductFromCart,\n  fillCartItemPicker,\n  resetCartSwitch,\n  cartStoreReplacementAction,\n  modifiDeliveryStateAndValue,\n  // ---- Middlewares -----\n};\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { cartStoreReplacementAction, switchCartItemPicker, switchCartStorePicker } from '../../../redux/cart/cart';\n// import { switchCartItemPicker, switchCartStorePicker } from '../../../redux/cart/cart';\n\nconst Cartitempicker = () => {\n  const dispatch = useDispatch();\n  const itemData = useSelector((state) => state.cartItemPickerReducer);\n  const [completedFields, setCompleted] = useState(false);\n  const [itemsCounter, setCounter] = useState(0);\n  const [uncompleteAlert, setUncAlert] = useState(false);\n\n  useEffect(() => {\n    setCompleted(true);\n  }, []);\n\n  const handleUpClick = (key, ref) => {\n    const input = document.getElementById(ref);\n    const allInput = document.querySelectorAll(`.${key}`);\n    const allInputArray = [];\n    allInput.forEach((e) => {\n      allInputArray.push(parseInt(e.value, 10));\n    });\n    const sumValue = allInputArray.reduce((a, b) => a + b);\n    const maxValue = parseInt(itemData.maxvalue, 10);\n    const factor = parseInt(itemData.factor, 10);\n    if (sumValue < maxValue) {\n      setCounter(itemsCounter - factor);\n      input.value = parseInt(input.value, 10) + factor;\n      if (maxValue - sumValue === factor) {\n        setCompleted(true);\n      }\n    }\n  };\n  const handleDownClick = (ref) => {\n    const input = document.getElementById(ref);\n    const factor = parseInt(itemData.factor, 10);\n    if (parseInt(input.value, 10) > 0) {\n      setCounter(itemsCounter + factor);\n      input.value = parseInt(input.value, 10) - parseInt(itemData.factor, 10);\n      setCompleted(false);\n    }\n  };\n  const handleAddClick = (key) => {\n    if (completedFields) {\n      const nameTitle = document.querySelectorAll('#sub_item_name');\n      const nameDescr = document.querySelectorAll('#sub_item_description');\n      const quantityInput = document.querySelectorAll(`.${key}`);\n      const nameTitleArray = [];\n      for (let i = 0; i < nameTitle.length; i += 1) {\n        nameTitleArray.push({\n          name: nameTitle[i].innerHTML,\n          quantity: parseInt(quantityInput[i].value, 10),\n          description: nameDescr[i].innerHTML,\n          codename: quantityInput[i].id,\n        });\n      }\n      const objectForSend = {\n        header: itemData.header,\n        content: nameTitleArray,\n        completed: true,\n        maxvalue: parseInt(itemData.maxvalue, 10),\n        factor: parseInt(itemData.factor, 10),\n      };\n      dispatch(cartStoreReplacementAction(objectForSend));\n      dispatch(switchCartItemPicker(false));\n      dispatch(switchCartStorePicker(true));\n    } else {\n      setUncAlert(true);\n    }\n  };\n  const handleBackBtn = () => {\n    dispatch(switchCartItemPicker(false));\n    dispatch(switchCartStorePicker(true));\n  };\n  return (\n    <div>\n      <h1>\n        Elige tus\n        {' '}\n        {itemData.header}\n      </h1>\n      {itemData.content.map((innerdata) => (\n        <div key={innerdata.name}>\n          <h1 id=\"sub_item_name\">\n            {innerdata.name}\n          </h1>\n          <p id=\"sub_item_description\">{innerdata.description}</p>\n          <div>\n            <input className={`classident_${itemData.header.split(' ').join('_')}`} id={innerdata.codename} type=\"number\" defaultValue={innerdata.quantity} />\n            <div>\n              <button type=\"button\" onClick={() => { handleUpClick(`classident_${itemData.header.split(' ').join('_')}`, innerdata.codename); }}>Up</button>\n              <button type=\"button\" onClick={() => { handleDownClick(innerdata.codename); }}>Down</button>\n            </div>\n          </div>\n        </div>\n      ))}\n      <div>{completedFields ? 'Completed' : `Tienes ${itemsCounter} por escoger`}</div>\n      {uncompleteAlert ? (<div>Background</div>) : ''}\n      {uncompleteAlert ? (<div onClick={() => { setUncAlert(false); }}><h1>Aun tienes items por escoger!</h1></div>) : ''}\n      <button type=\"button\" onClick={() => { handleAddClick(`classident_${itemData.header.split(' ').join('_')}`); }}>Aceptar</button>\n      <button type=\"button\" onClick={() => handleBackBtn()}>Volver</button>\n    </div>\n  );\n};\n\nexport default Cartitempicker;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fillCartItemPicker,\n  modifyProductFromCart,\n  switchCartItemPicker,\n  switchCartStorePicker,\n  switchShoppingCart,\n} from '../../../redux/cart/cart';\n\nconst Cartstorepicker = () => {\n  const dispatch = useDispatch();\n  const pickerData = useSelector((state) => state.cartStorePickerReducer);\n  const handleClick = (info) => {\n    dispatch(fillCartItemPicker(info));\n    dispatch(switchCartStorePicker(false));\n    dispatch(switchCartItemPicker(true));\n  };\n  const checkAll = (array) => {\n    for (let i = 0; i < array.length; i += 1) {\n      if (!array[i].completed) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleAddProductToCart = () => {\n    if (checkAll(pickerData.content)) {\n      dispatch(modifyProductFromCart(pickerData));\n      dispatch(switchCartStorePicker(false));\n      dispatch(switchShoppingCart(true));\n    }\n    return false;\n  };\n  const handleBackBtn = () => {\n    dispatch(switchCartStorePicker(false));\n    dispatch(switchShoppingCart(true));\n  };\n  return (\n    <div className=\"store_picker_container\">\n      <div>\n        <div>StorePicker</div>\n        {pickerData.content.map((data) => (\n          <div key={data.header}>\n            <button\n              className={data.completed ? 'completed_btn' : 'uncompleted_btn'}\n              type=\"button\"\n              onClick={() => {\n                handleClick(data);\n              }}\n            >\n              {data.header}\n            </button>\n          </div>\n        ))}\n        <button type=\"button\" onClick={() => handleAddProductToCart()}>Terminar modificaciones</button>\n        <button type=\"button\" onClick={() => handleBackBtn()}>Volver</button>\n      </div>\n    </div>\n  );\n};\nexport default Cartstorepicker;\n","function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nconst whatsorder = (order) => {\n  const stringArray = [];\n  stringArray.push(`Hola!%20Mi%20nombre%20es%20${order.customername.split(' ').join('%20')}!%0AEsta%20es%20mi%20orden%20para%20hoy:%0A`);\n  order.ordercontent.forEach((elem) => {\n    stringArray.push(`%0A%20%20%20🍣%20${capitalizeFirstLetter(elem.header.split(' ').join('%20'))}%0A`);\n    elem.content.forEach((elemsub) => {\n      stringArray.push(`%0A%20%20%20%20%20%20-%20${capitalizeFirstLetter(elemsub.header.split(' ').join('%20'))}%0A`);\n      elemsub.content.forEach((elemsubsub) => {\n        if (elemsubsub.quantity) { stringArray.push(`%20%20%20%20%20%20%20%20${capitalizeFirstLetter(elemsubsub.name.split(' ').join('%20'))}%20x%20${elemsubsub.quantity}%0A`); }\n      });\n    });\n    stringArray.push('%0A-------------------------------%0A');\n  });\n  stringArray.push(`%0A%20Lo%20deseo%20para%20delivery%0A%20a%20la%20dirección:%0A%20*%20${order.orderaddress.split(' ').join('%20')}%0A%20Referencia:%0A%20*%20${order.orderaddressref.split(' ').join('%20')}`);\n  stringArray.push(`%0A%0A%20El%20monto%20total%20de%20mi%20orden%20es%20de%20S/%20${order.orderamounttotal}%0A%0A`);\n  if (order.orderdeliverystate) { stringArray.push('%20Incluido%20el%20recargo%20por%20envío%20de%20S/%204.90%0A%0A'); }\n  stringArray.push(`%20Realizaré%20el%20pago%20a%20través%20de:%20${order.paymentmethod.split(' ').join('%20')}`);\n  const urlPath = `https://api.whatsapp.com/send?phone=51994172125&text=${stringArray.reduce((a, b) => a + b)}`;\n  window.open(urlPath, '_blank').focus();\n};\n\nexport default whatsorder;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { switchShoppingCart, switchCartStorePicker, fillCartStorePicker } from '../redux/cart/cart';\nimport Cartitempicker from './modules/shoppingcart/cartitempicker';\nimport Cartstorepicker from './modules/shoppingcart/cartstorepicker';\nimport { miniIdGenerator } from './utilities/idgen';\nimport whatsorder from './utilities/whatsorder';\n\nconst ShoppingCart = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.cartReducer);\n  const switchState = useSelector((state) => state.cartSwitchReducer);\n  const handleEditClick = (param) => {\n    dispatch(fillCartStorePicker(param));\n    dispatch(switchCartStorePicker(true));\n    dispatch(switchShoppingCart(false));\n  };\n  const sendOrderStepOne = (order) => {\n    whatsorder(order);\n    // window.location.href = 'https://api.whatsapp.com/send?phone=51994172125&text=New%20order%20%F0%9F%9B%B5%20(Kitchen+J+%26+S)%0A(%23%20E3E61)%0A%0A%E2%96%AA1+x+Mysore+Sada+Dosa%0D%0A%E2%96%AA1+x+Masala+Dosa%0D%0A%0A*Payable:%20INR%20168.00*%0A%0A*Customer%20details*%0AAsdf%0Aasdf%0Aasdf%0Aasdf%0A****%0A%0A-----------------------------%0A(Message%20for%20Customer)%0A%0APayment%20options%20can%20be%20selected%20%0A%20when%20creating%20your%20own%20WhatsOrder%20page';\n  };\n  return (\n    <div>\n      { switchState.shoppingcart ? (\n        <div>\n          {\n      data.ordercontent.length > 0\n        ? (\n          <div>\n            {data.ordercontent.map((eh) => (\n              <div key={`${eh.header}${miniIdGenerator()}`}>\n                <button type=\"button\" onClick={() => { handleEditClick(eh); }}>\n                  <h1>{eh.header}</h1>\n                  {eh.content.map((ec) => (\n                    <div key={ec.header}>\n                      <h2>{ec.header}</h2>\n                      {ec.content.map((ecc) => (\n                        ecc.quantity > 0\n                          ? (\n                            <h3 key={ecc.name}>\n                              {ecc.name}\n                              {' x '}\n                              {ecc.quantity}\n                            </h3>\n                          ) : ''\n                      ))}\n                    </div>\n                  ))}\n                  <footer>{eh.price}</footer>\n                </button>\n              </div>\n            ))}\n            <h1>Monto de compra</h1>\n            <h2>{`S/ ${parseFloat(data.orderproductsamount).toFixed(2)}`}</h2>\n            <h1>Delivery</h1>\n            <h2>{`S/ ${parseFloat(data.orderdeliveryamount).toFixed(2)}`}</h2>\n            <h1>Total</h1>\n            <h2>{`S/ ${parseFloat(data.orderamounttotal).toFixed(2)}`}</h2>\n            <button type=\"button\" onClick={() => { sendOrderStepOne(data); }}>Enviar pedido</button>\n          </div>\n\n        ) : <Link to=\"/store\"> Aun no tienes items en tu carrito, ingresa aquí y agrégalos ya mismo!</Link>\n        }\n        </div>\n      ) : ''}\n      {switchState.cartstorepicker ? <Cartstorepicker /> : ''}\n      {switchState.cartitempicker ? <Cartitempicker /> : ''}\n    </div>\n  );\n};\nexport default ShoppingCart;\n","import idGenerator from '../../components/utilities/idgen';\n\n// ---------------- paths (Data) --------------------\nconst TRIGGER_STORE = 'REDUX/STORE/STORE/GET_CATEGORIES';\nconst TRIGGER_PRODUCTS = 'REDUX/STORE/STORE/TRIGGER_PRODUCTS';\nconst GET_CATEGORIES = 'REDUX/STORE/STORE/UPD_STORE';\nconst GET_PRODUCTS = 'REDUX/STORE/STORE/GET_PRODUCTS';\nconst TRIGGER_PICKER = 'REDUX/STORE/TRIGGER_PICKER';\nconst GET_PICKER = 'REDUX/STORE/GET_PICKER';\nconst SEND_ITEM_CONTENT = 'REDUX/STORE/SEND_ITEM_CONTENT';\nconst APPEND_ITEM_TO_PRODUCT = 'REDUX/STORE/APPEND_ITEM_TO_PRODUCT';\nconst BUILD_ITEM = 'REDUX/STORE/BUILD_ITEM';\nconst SET_ITEM_HEADER = 'REDUX/STORE/SET_ITEM_HEADER';\nconst SET_PRODUCT_HEADER = 'REDUX/STORE/SET_PRODUCT_HEADER';\nconst SET_FINAL_PRODUCT_HEADER = 'REDUX/STORE/SET_FINAL_PRODUCT_HEADER';\nconst CHANGE_COMPLETED_STATE = 'REDUX/STORE/CHANGE_COMPLETED_STATE';\n// ---------------- paths (Switch) --------------------\nconst SWITCH_PARENT_STATE = 'REDUX/STORE/SWITCH_PARENT_STATE';\nconst SWITCH_SECONDARY_STORE = 'REDUX/STORE/SWITCH_SECONDARY_STORE';\nconst SWITCH_STORE_PICKER = 'REDUX/STORE/SWITCH_STORE_PICKER';\nconst SWITCH_ITEM_PICKER = 'REDUX/STORE/SWITCH_ITEM_PICKER';\nconst RESET_STORE = 'REDUX/STORE/RESET_STORE';\n\n// ---------------- Initial state ------------\nlet firstLoadState = true;\nconst initialState = [];\n// ---------------- Actions (Data) ------------------\nconst triggerStore = (payload) => ({\n  type: TRIGGER_STORE,\n  payload,\n});\nconst updateProductsWithAPI = (payload) => ({\n  type: GET_CATEGORIES,\n  payload,\n});\nconst triggerProducts = (payload) => ({\n  type: TRIGGER_PRODUCTS,\n  payload,\n});\nconst getProducts = (payload) => ({\n  type: GET_PRODUCTS,\n  payload,\n});\nconst triggerPicker = (payload) => ({\n  type: TRIGGER_PICKER,\n  payload,\n});\nconst getPicker = (payload) => ({\n  type: GET_PICKER,\n  payload,\n});\nconst opentItemPicker = (payload) => ({\n  type: SEND_ITEM_CONTENT,\n  payload,\n});\nconst setProductHeader = (payload) => ({\n  type: SET_PRODUCT_HEADER,\n  payload,\n});\nconst changeCompletedState = (payload) => ({\n  type: CHANGE_COMPLETED_STATE,\n  payload,\n});\nconst setItemHeader = (payload) => ({\n  type: SET_ITEM_HEADER,\n  payload,\n});\nconst buildItem = (payload) => ({\n  type: BUILD_ITEM,\n  payload,\n});\nconst appendItemToProduct = (payload) => ({\n  type: APPEND_ITEM_TO_PRODUCT,\n  payload,\n});\nconst setFinalProductHeader = (payload) => ({\n  type: SET_FINAL_PRODUCT_HEADER,\n  payload,\n});\n// ---------------- Actions (Switch) ------------------\nconst switchParentState = (payload) => ({\n  type: SWITCH_PARENT_STATE,\n  payload,\n});\nconst switchSecondaryState = (payload) => ({\n  type: SWITCH_SECONDARY_STORE,\n  payload,\n});\nconst switchStorePicker = (payload) => ({\n  type: SWITCH_STORE_PICKER,\n  payload,\n});\nconst switchItemPicker = (payload) => ({\n  type: SWITCH_ITEM_PICKER,\n  payload,\n});\nconst resetStore = () => ({\n  type: RESET_STORE,\n});\n\n// ----------------- SWITCH --------------\n// ----------------- REDUCERS ------------\nconst storeSwitchDefaultState = {\n  parentState: true,\n  secondaryStoreState: false,\n  storePickerState: false,\n  itemPickerState: false,\n};\nconst storeSwitchReducer = (state = storeSwitchDefaultState, action) => {\n  const storeState = {\n    parentState: state.parentState,\n    secondaryStoreState: state.secondaryStoreState,\n    storePickerState: state.storePickerState,\n    itemPickerState: state.itemPickerState,\n  };\n  switch (action.type) {\n    case SWITCH_PARENT_STATE:\n      storeState.parentState = action.payload;\n      return storeState;\n    case SWITCH_SECONDARY_STORE:\n      storeState.secondaryStoreState = action.payload;\n      return storeState;\n    case SWITCH_STORE_PICKER:\n      storeState.storePickerState = action.payload;\n      return storeState;\n    case SWITCH_ITEM_PICKER:\n      storeState.itemPickerState = action.payload;\n      return storeState;\n    case RESET_STORE:\n      return storeSwitchDefaultState;\n    default:\n      return state;\n  }\n};\n\n// ----------------- STORE MAIN --------------\n// ----------------- REDUCERS ------------\nconst storemainReducer = (state = initialState, action) => {\n  const actionPayload = action.payload;\n  switch (action.type) {\n    case TRIGGER_STORE:\n      return state;\n    case GET_CATEGORIES:\n      return actionPayload;\n    default:\n      return state;\n  }\n};\nconst storeSecondaryReducer = (state = initialState, action) => {\n  const actionPayload = action.payload;\n  switch (action.type) {\n    case TRIGGER_PRODUCTS:\n      return initialState;\n    case GET_PRODUCTS:\n      return actionPayload;\n    default:\n      return state;\n  }\n};\nconst storePickerReducer = (state = initialState, action) => {\n  const actionPayload = action.payload;\n  const activeState = state;\n  const activeContent = state.content;\n  const replaceCompletedState = (name) => {\n    for (let i = 0; i < activeContent.length; i += 1) {\n      if (activeContent[i].name === name) {\n        activeContent[i].completed = true;\n      }\n    }\n  };\n  switch (action.type) {\n    case SET_PRODUCT_HEADER:\n      return {\n        header: actionPayload.header,\n        price: actionPayload.price,\n        content: [],\n      };\n    case GET_PICKER:\n      activeState.content = actionPayload;\n      return {\n        header: activeState.header,\n        content: activeState.content,\n        price: activeState.price,\n      };\n    case CHANGE_COMPLETED_STATE:\n      replaceCompletedState(action.payload);\n      return {\n        header: activeState.header,\n        content: activeContent,\n        price: activeState.price,\n      };\n    default:\n      return state;\n  }\n};\nconst itemPickerReducer = (state = initialState, action) => {\n  const actionPayload = action.payload;\n  switch (action.type) {\n    case SET_ITEM_HEADER:\n      return {\n        header: actionPayload,\n        content: [],\n      };\n    case SEND_ITEM_CONTENT:\n      return {\n        header: state.header,\n        content: actionPayload,\n      };\n    default:\n      return state;\n  }\n};\nconst itemBuildReducer = (state = initialState, action) => {\n  const activeState = state;\n  const actionPayload = action.payload;\n  switch (action.type) {\n    case BUILD_ITEM:\n      activeState.content = actionPayload;\n      return activeState;\n    default:\n      return state;\n  }\n};\nconst productBuildReducer = (state = initialState, action) => {\n  const load = action.payload;\n  const tester = () => {\n    const arrayToTest = [...state.content];\n    if (arrayToTest.length > 0) {\n      for (let i = 0; i < arrayToTest.length; i += 1) {\n        if (arrayToTest[i].header === load.header) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const replaceData = (toRep) => {\n    const arrayToRep = [...state.content];\n    for (let i = 0; i < arrayToRep.length; i += 1) {\n      if (arrayToRep[i].header === toRep.header) {\n        arrayToRep[i].content = toRep.content;\n      }\n    }\n    return arrayToRep;\n  };\n  switch (action.type) {\n    case SET_FINAL_PRODUCT_HEADER:\n      return {\n        header: action.payload.header,\n        price: action.payload.price,\n        code: idGenerator(),\n        content: [],\n      };\n    case APPEND_ITEM_TO_PRODUCT:\n      if (tester()) {\n        return {\n          header: state.header,\n          price: state.price,\n          code: state.code,\n          content: replaceData(load),\n        };\n      }\n      return {\n        header: state.header,\n        price: state.price,\n        code: state.code,\n        content: [...state.content, load],\n      };\n\n    default:\n      return state;\n  }\n};\n// ---------------- Middlewares and Side Effects --------------\nconst getCategoriesFromAPIMiddleware = (store) => (next) => (action) => {\n  if (action.type === TRIGGER_STORE) {\n    if (firstLoadState) {\n      firstLoadState = false;\n      fetch('/getCategories', {\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      }).then((response) => response.json())\n        .then((json) => store.dispatch(updateProductsWithAPI(json)));\n    }\n  }\n  next(action);\n};\nconst getProductsFromAPIMiddleware = (store) => (next) => (action) => {\n  if (action.type === TRIGGER_PRODUCTS) {\n    fetch(`/getProdWithId/${action.payload}`, {\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then((response) => response.json())\n      .then((json) => store.dispatch(getProducts(json)));\n  }\n  next(action);\n};\nconst getItemsFromAPIMiddleware = (store) => (next) => (action) => {\n  if (action.type === SET_PRODUCT_HEADER) {\n    fetch(`/getItemWithId/${action.payload.id}`, {\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then((response) => response.json())\n      .then((json) => store.dispatch(getPicker(json)));\n  }\n  next(action);\n};\nconst addItemToProductMiddleware = (store) => (next) => (action) => {\n  if (action.type === BUILD_ITEM) {\n    store.dispatch(appendItemToProduct(action.payload));\n  }\n  next(action);\n};\nconst addFinalProductHeaderMiddleware = (store) => (next) => (action) => {\n  if (action.type === SET_PRODUCT_HEADER) {\n    store.dispatch(setFinalProductHeader({\n      header: action.payload.header,\n      price: action.payload.price,\n    }));\n  }\n  next(action);\n};\n// ---------------- Exports --------------\nexport {\n  // ------ Reducers -------\n  storeSwitchReducer,\n  storemainReducer,\n  storeSecondaryReducer,\n  storePickerReducer,\n  itemPickerReducer,\n  itemBuildReducer,\n  productBuildReducer,\n  // ------ Actions (Switch) --------\n  switchParentState,\n  switchSecondaryState,\n  switchStorePicker,\n  switchItemPicker,\n  resetStore,\n  // ------ Actions (Data) --------\n  triggerStore,\n  triggerProducts,\n  triggerPicker,\n  getProducts,\n  getPicker,\n  updateProductsWithAPI,\n  opentItemPicker,\n  setProductHeader,\n  buildItem,\n  setItemHeader,\n  changeCompletedState,\n  // ---- Middlewares -----\n  getCategoriesFromAPIMiddleware,\n  getProductsFromAPIMiddleware,\n  getItemsFromAPIMiddleware,\n  addItemToProductMiddleware,\n  addFinalProductHeaderMiddleware,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  resetStore,\n  setProductHeader,\n  switchSecondaryState,\n  switchStorePicker,\n} from '../../../redux/store/store';\n\nconst Storesecondary = () => {\n  const secondaryData = useSelector((state) => state.storeSecondaryReducer);\n  const dispatch = useDispatch();\n  const handleClick = (data) => {\n    dispatch(switchSecondaryState(false));\n    dispatch(switchStorePicker(true));\n    dispatch(setProductHeader(data));\n  };\n  const HandleBackBtn = () => {\n    dispatch(resetStore());\n  };\n  return (\n    <div className=\"store_secondary_container\">\n      <div>\n        <div>StoreSecondary</div>\n        {secondaryData.map((data) => (\n          <button key={data.nombre} type=\"button\" onClick={() => { handleClick({ id: data.idproductos, header: data.nombre, price: data.precio }); }}>{data.nombre}</button>\n        ))}\n        <button type=\"button\" onClick={() => { HandleBackBtn(); }}>Volver</button>\n      </div>\n    </div>\n  );\n};\nexport default Storesecondary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  opentItemPicker,\n  resetStore,\n  setItemHeader,\n  switchItemPicker,\n  switchSecondaryState,\n  switchStorePicker,\n} from '../../../redux/store/store';\nimport { buildProduct } from '../../../redux/cart/cart';\n\nconst Storepicker = () => {\n  const dispatch = useDispatch();\n  const pickerData = useSelector((state) => state.storePickerReducer);\n  const productBuild = useSelector(((state) => state.productBuildReducer));\n  const handleClick2 = (info, header) => {\n    dispatch(switchStorePicker(false));\n    dispatch(setItemHeader(header));\n    dispatch(opentItemPicker(info));\n    dispatch(switchItemPicker(true));\n  };\n  const checkAll = (array) => {\n    for (let i = 0; i < array.length; i += 1) {\n      if (!array[i].completed) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleAddProductToCart = () => {\n    if (checkAll(pickerData.content)) {\n      dispatch(resetStore());\n      dispatch(buildProduct(productBuild));\n      return (<Redirect push to=\"/store\" />);\n    }\n    return false;\n  };\n  const handleBackBtn = () => {\n    dispatch(switchStorePicker(false));\n    dispatch(switchSecondaryState(true));\n  };\n  return (\n    <div className=\"store_picker_container\">\n      <div>\n        <div>StorePicker</div>\n        {pickerData.content.map((data) => (\n          <div key={data.name}>\n            <button\n              className={data.completed ? 'completed_btn' : 'uncompleted_btn'}\n              type=\"button\"\n              onClick={() => {\n                handleClick2(data, data.name);\n              }}\n            >\n              {data.name}\n            </button>\n          </div>\n        ))}\n        {checkAll(pickerData.content) ? (<Link to=\"/shop\" onClick={() => handleAddProductToCart()}>Agregar al carrito</Link>) : (<button type=\"button\" onClick={() => handleAddProductToCart()}>Agregar al carrito</button>) }\n        <button type=\"button\" onClick={() => handleBackBtn()}>Volver</button>\n      </div>\n    </div>\n  );\n};\nexport default Storepicker;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  buildItem,\n  changeCompletedState,\n  switchItemPicker,\n  switchStorePicker,\n} from '../../../redux/store/store';\n\nconst Itempicker = () => {\n  const dispatch = useDispatch();\n  const itemData = useSelector((state) => state.itemPickerReducer);\n  const productBuild = useSelector((state) => state.productBuildReducer);\n  const [completedFields, setCompleted] = useState(false);\n  const [itemsCounter, setCounter] = useState(parseInt(itemData.content.indexes.cantidad, 10));\n  const [uncompleteAlert, setUncAlert] = useState(false);\n  const tester = () => {\n    const arrayToTest = [...productBuild.content];\n    if (arrayToTest.length > 0) {\n      for (let i = 0; i < arrayToTest.length; i += 1) {\n        if (arrayToTest[i].header === itemData.header) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  useEffect(() => {\n    if (tester()) {\n      const allInputs = document.querySelectorAll(`.${itemData.content.name.split(' ').join('_')}`);\n      const arrayToSample = [...productBuild.content];\n      let allPreviousValues = [];\n      for (let i = 0; i < arrayToSample.length; i += 1) {\n        if (arrayToSample[i].header === itemData.header) {\n          allPreviousValues = arrayToSample[i].content;\n        }\n      }\n      for (let x = 0; x < allInputs.length; x += 1) {\n        for (let i = 0; i < allPreviousValues.length; i += 1) {\n          if (itemData.content.content[x].nombre === allPreviousValues[i].name) {\n            allInputs[x].value = allPreviousValues[i].quantity;\n          }\n        }\n      }\n      setCounter(0);\n      setCompleted(true);\n    }\n  }, []);\n  const handleUpClick = (key, ref) => {\n    const input = document.getElementById(ref);\n    const allInput = document.querySelectorAll(`.${key}`);\n    const allInputArray = [];\n    allInput.forEach((e) => {\n      allInputArray.push(parseInt(e.value, 10));\n    });\n    const sumValue = allInputArray.reduce((a, b) => a + b);\n    const maxValue = parseInt(itemData.content.indexes.cantidad, 10);\n    const factor = parseInt(itemData.content.indexes.factor, 10);\n    if (sumValue < maxValue) {\n      setCounter(itemsCounter - factor);\n      input.value = parseInt(input.value, 10) + factor;\n      if (maxValue - sumValue === factor) {\n        setCompleted(true);\n      }\n    }\n  };\n  const handleDownClick = (ref) => {\n    const input = document.getElementById(ref);\n    const factor = parseInt(itemData.content.indexes.factor, 10);\n    if (parseInt(input.value, 10) > 0) {\n      setCounter(itemsCounter + factor);\n      input.value = parseInt(input.value, 10) - parseInt(itemData.content.indexes.factor, 10);\n      setCompleted(false);\n    }\n  };\n  const handleAddClick = (key) => {\n    if (completedFields) {\n      const nameTitle = document.querySelectorAll('#sub_item_name');\n      const nameDescr = document.querySelectorAll('#sub_item_description');\n      const quantityInput = document.querySelectorAll(`.${key}`);\n      const nameTitleArray = [];\n      for (let i = 0; i < nameTitle.length; i += 1) {\n        nameTitleArray.push({\n          name: nameTitle[i].innerHTML,\n          quantity: parseInt(quantityInput[i].value, 10),\n          description: nameDescr[i].innerHTML,\n          codename: quantityInput[i].id,\n        });\n      }\n      const objectForSend = {\n        header: itemData.header,\n        content: nameTitleArray,\n        completed: true,\n        maxvalue: parseInt(itemData.content.indexes.cantidad, 10),\n        factor: parseInt(itemData.content.indexes.factor, 10),\n      };\n      dispatch(buildItem(objectForSend));\n      dispatch(switchItemPicker(false));\n      dispatch(switchStorePicker(true));\n      dispatch(changeCompletedState(itemData.header));\n    } else {\n      setUncAlert(true);\n    }\n  };\n  const handleBackBtn = () => {\n    dispatch(switchItemPicker(false));\n    dispatch(switchStorePicker(true));\n  };\n  return (\n    <div>\n      <h1>\n        Elige tus\n        {' '}\n        {itemData.header}\n      </h1>\n      {itemData.content.content.map((innerdata) => (\n        <div key={innerdata.nombre}>\n          <h1 id=\"sub_item_name\">\n            {innerdata.nombre}\n          </h1>\n          <p id=\"sub_item_description\">{innerdata.descripcion}</p>\n          <div>\n            <input className={itemData.content.name.split(' ').join('_')} id={innerdata.codename} type=\"number\" defaultValue={0} />\n            <div>\n              <button type=\"button\" onClick={() => { handleUpClick(itemData.content.name.split(' ').join('_'), innerdata.codename); }}>Up</button>\n              <button type=\"button\" onClick={() => { handleDownClick(innerdata.codename); }}>Down</button>\n            </div>\n          </div>\n        </div>\n      ))}\n      <div>{completedFields ? 'Completed' : `Tienes ${itemsCounter} por escoger`}</div>\n      {uncompleteAlert ? (<div>Background</div>) : ''}\n      {uncompleteAlert ? (<div onClick={() => { setUncAlert(false); }}><h1>Aun tienes items por escoger!</h1></div>) : ''}\n      <button type=\"button\" onClick={() => { handleAddClick(itemData.content.name.split(' ').join('_')); }}>Aceptar</button>\n      <button type=\"button\" onClick={() => handleBackBtn()}>Volver</button>\n    </div>\n  );\n};\n\nexport default Itempicker;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  switchParentState,\n  switchSecondaryState,\n  triggerProducts,\n  triggerStore,\n} from '../../../redux/store/store';\nimport Storesecondary from './storesecondary';\nimport Storepicker from './storepicker';\nimport Itempicker from './itempicker';\n\nconst Storemain = () => {\n  const dispatch = useDispatch();\n  const productData = useSelector((state) => state.storemainReducer);\n  const switchState = useSelector((state) => state.storeSwitchReducer);\n  const [parentState,\n    secondaryStoreState,\n    storePickerState,\n    itemPickerState] = [\n    switchState.parentState,\n    switchState.secondaryStoreState,\n    switchState.storePickerState,\n    switchState.itemPickerState,\n  ];\n  useEffect(() => {\n    dispatch(triggerStore([]));\n    dispatch(switchParentState(true));\n  }, []);\n  const handleClick = (key) => {\n    dispatch(switchParentState(false));\n    dispatch(triggerProducts(key));\n    dispatch(switchSecondaryState(true));\n  };\n  return (\n    <div className=\"store_main_container\">\n      {parentState\n        ? (\n          <div>\n            {productData.map((data) => (\n              <button type=\"button\" key={data.nombre} onClick={() => handleClick(data.idcategorias)}>{data.nombre}</button>\n            ))}\n          </div>\n        ) : false}\n\n      {secondaryStoreState\n        ? (\n          <Storesecondary />\n        ) : false}\n      {storePickerState\n        ? (\n          <Storepicker />\n        ) : false}\n      {itemPickerState\n        ? (\n          <Itempicker />\n        ) : false}\n    </div>\n  );\n};\nexport default Storemain;\n","import React from 'react';\nimport Storemain from './modules/store/storemain';\n\nconst Store = () => (\n  <div id=\"Products\">\n    <Storemain />\n  </div>\n);\n\nexport default Store;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport HomePage from './components/homepage';\nimport ShoppingCart from './components/shoppingcart';\nimport Store from './components/store';\nimport { resetCartSwitch } from './redux/cart/cart';\nimport { resetStore } from './redux/store/store';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const handleStoreCloseClick = () => {\n    dispatch(resetStore());\n    dispatch(resetCartSwitch());\n  };\n  return (\n    <Router>\n      <div className=\"hello\">\n        <h1>Makit App</h1>\n      </div>\n      <div className=\"switch\">\n        <div className=\"switch_header\">\n          <ul className=\"nav-bar\">\n            <li className=\"nav-bar-li\">\n              <Link onClick={() => { handleStoreCloseClick(); }} to=\"/home\">Home</Link>\n            </li>\n            <li className=\"nav-bar-li\">\n              <Link onClick={() => { handleStoreCloseClick(); }} to=\"/store\">Store</Link>\n            </li>\n            <li className=\"nav-bar-li\">\n              <Link onClick={() => { handleStoreCloseClick(); }} to=\"/shop\">Shoping Cart</Link>\n            </li>\n          </ul>\n        </div>\n        <Switch>\n          <Route path=\"/home\">\n            <HomePage />\n          </Route>\n          <Route path=\"/store\">\n            <Store />\n          </Route>\n          <Route path=\"/shop\">\n            <ShoppingCart />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import {\n  createStore, compose, combineReducers, applyMiddleware,\n} from 'redux';\nimport logger from 'redux-logger';\n// ----------- STORE IMPORTS -----------\nimport {\n  // --- Reducers --\n  storeSwitchReducer,\n  storemainReducer,\n  storeSecondaryReducer,\n  storePickerReducer,\n  itemPickerReducer,\n  itemBuildReducer,\n  productBuildReducer,\n  // --- Middlewares --\n  getCategoriesFromAPIMiddleware,\n  getProductsFromAPIMiddleware,\n  getItemsFromAPIMiddleware,\n  addItemToProductMiddleware,\n  addFinalProductHeaderMiddleware,\n} from './store/store';\n// ----------- CART IMPORTS -----------\nimport {\n  // --- Reducers --\n  cartReducer,\n  cartSwitchReducer,\n  cartStorePickerReducer,\n  cartItemPickerReducer,\n  // --- Middlewares --\n} from './cart/cart';\n\nconst reducer = combineReducers({\n  // ------------ Store Reducers -----\n  storeSwitchReducer,\n  storemainReducer,\n  storeSecondaryReducer,\n  storePickerReducer,\n  itemPickerReducer,\n  itemBuildReducer,\n  productBuildReducer,\n  // ----------- Cart Reducers ------\n  cartReducer,\n  cartSwitchReducer,\n  cartStorePickerReducer,\n  cartItemPickerReducer,\n});\n\nconst composedEnhancer = compose(\n  // ------------ Store Middlewares -----\n  applyMiddleware(getCategoriesFromAPIMiddleware),\n  applyMiddleware(getProductsFromAPIMiddleware),\n  applyMiddleware(getItemsFromAPIMiddleware),\n  applyMiddleware(addItemToProductMiddleware),\n  applyMiddleware(addFinalProductHeaderMiddleware),\n  // ------------ Cart Middlewares -----\n\n  // ------------- Logger --------------\n  applyMiddleware(logger),\n);\n\nconst store = createStore(\n  reducer,\n  undefined,\n  composedEnhancer,\n);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/configureStore';\nimport './styles/_login.scss';\nimport './styles/_store.scss';\nimport './styles/_main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}