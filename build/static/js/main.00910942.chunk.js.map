{"version":3,"sources":["components/homepage.js","components/utilities/idgen.js","redux/cart/cart.js","components/modules/shoppingcart/cartitempicker.js","components/modules/shoppingcart/cartstorepicker.js","components/shoppingcart.js","redux/store/store.js","components/modules/store/storesecondary.js","components/modules/store/storepicker.js","components/modules/store/itempicker.js","components/modules/store/storemain.js","components/store.js","App.js","redux/configureStore.js","index.js"],"names":["HomePage","idGenerator","s4","Math","floor","random","toString","substring","guid","APPEND_PRODUCT_TO_CART","SWITCH_SHOPPING_CART","SWITCH_CART_STORE_PICKER","SWITCH_CART_ITEM_PICKER","FILL_CART_STORE_PICKER","MODIFY_PRODUCT_FROM_CART","FILL_CART_ITEM_PICKER","RESET_CART_SWITCH","CART_STORE_REPLACEMENT_ACTION","MODIFY_DELIVERY_STATE_AND_VALUE","switchShoppingCart","payload","type","switchCartStorePicker","switchCartItemPicker","cartSwitchInitialState","shoppingcart","cartstorepicker","cartitempicker","cartReducerInitialState","ordercontent","customerid","customername","customerphone","code","orderaddress","orderaddressref","orderproductsamount","orderamounttotal","orderdeliverystate","orderdeliveryamount","paymentmethod","orderregisterdate","orderdeliverdate","orderregistertime","orderdelivertime","Cartitempicker","dispatch","useDispatch","itemData","useSelector","state","cartItemPickerReducer","useState","completedFields","setCompleted","itemsCounter","setCounter","uncompleteAlert","setUncAlert","useEffect","handleAddClick","key","nameTitle","document","querySelectorAll","nameDescr","quantityInput","nameTitleArray","i","length","push","name","innerHTML","quantity","parseInt","value","description","codename","id","objectForSend","header","content","completed","maxvalue","factor","map","innerdata","className","split","join","defaultValue","onClick","ref","input","getElementById","allInput","allInputArray","forEach","e","sumValue","reduce","a","b","maxValue","handleUpClick","handleDownClick","Cartstorepicker","pickerData","cartStorePickerReducer","handleClick","info","handleAddProductToCart","array","checkAll","data","ShoppingCart","cartReducer","switchState","cartSwitchReducer","handleEditClick","param","eh","ec","ecc","price","TRIGGER_STORE","TRIGGER_PRODUCTS","GET_CATEGORIES","GET_PRODUCTS","GET_PICKER","SEND_ITEM_CONTENT","APPEND_ITEM_TO_PRODUCT","BUILD_ITEM","SET_ITEM_HEADER","SET_PRODUCT_HEADER","SET_FINAL_PRODUCT_HEADER","CHANGE_COMPLETED_STATE","SWITCH_PARENT_STATE","SWITCH_SECONDARY_STORE","SWITCH_STORE_PICKER","SWITCH_ITEM_PICKER","RESET_STORE","firstLoadState","initialState","switchParentState","switchSecondaryState","switchStorePicker","switchItemPicker","resetStore","storeSwitchDefaultState","parentState","secondaryStoreState","storePickerState","itemPickerState","Storesecondary","secondaryData","storeSecondaryReducer","idproductos","nombre","precio","Storepicker","storePickerReducer","productBuild","productBuildReducer","handleClick2","opentItemPicker","to","Itempicker","itemPickerReducer","indexes","cantidad","arrayToTest","tester","allInputs","arrayToSample","allPreviousValues","x","changeCompletedState","descripcion","Storemain","productData","storemainReducer","storeSwitchReducer","idcategorias","Store","App","handleStoreCloseClick","path","reducer","combineReducers","action","storeState","actionPayload","activeState","activeContent","replaceCompletedState","itemBuildReducer","load","replaceData","toRep","arrayToRep","productsArray","stateObject","sumProducts","priceArray","parseFloat","toFixed","filter","replaceFunction","stateArray","newArray","composedEnhancer","compose","applyMiddleware","store","next","fetch","headers","then","response","json","logger","createStore","undefined","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.00910942.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n  <div>\n    Home Page\n  </div>\n);\nexport default HomePage;\n","const idGenerator = () => {\n  const guid = () => {\n    const s4 = () => Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n    return `${s4() + s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n  };\n  const newKey = guid();\n  return newKey;\n};\n\nconst miniIdGenerator = () => {\n  const guid = () => {\n    const s4 = () => Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n    return `${s4() + s4()}-${s4()}`;\n  };\n  const newKey = guid();\n  return newKey;\n};\n\nexport default idGenerator;\nexport { miniIdGenerator };\n","import idGenerator from '../../components/utilities/idgen';\n\n// ---------------- paths --------------------\nconst APPEND_PRODUCT_TO_CART = 'REDUX/CART/APPEND_PRODUCT_TO_CART';\nconst SWITCH_SHOPPING_CART = 'REDUX/CART/SWITCH_SHOPPING_CART';\nconst SWITCH_CART_STORE_PICKER = 'REDUX/CART/SWITCH_CART_STORE_PICKER';\nconst SWITCH_CART_ITEM_PICKER = 'REDUX/CART/SWITCH_CART_ITEM_PICKER';\nconst FILL_CART_STORE_PICKER = 'REDUX/CART/FILL_CART_STORE_PICKER';\nconst MODIFY_PRODUCT_FROM_CART = 'REDUX/CART/MODIFY_PRODUCT_FROM_CART';\nconst FILL_CART_ITEM_PICKER = 'REDUX/CART/FILL_CART_ITEM_PICKER';\nconst RESET_CART_SWITCH = 'REDUX/CART/RESET_CART_SWITCH';\nconst CART_STORE_REPLACEMENT_ACTION = 'REDUX/CART/CART_STORE_REPLACEMENT_ACTION';\nconst MODIFY_DELIVERY_STATE_AND_VALUE = 'REDUX/CART/MODIFY_DELIVERY_STATE_AND_VALUE';\n// ---------------- Actions ------------------\nconst buildProduct = (payload) => ({\n  type: APPEND_PRODUCT_TO_CART,\n  payload,\n});\nconst switchShoppingCart = (payload) => ({\n  type: SWITCH_SHOPPING_CART,\n  payload,\n});\nconst switchCartStorePicker = (payload) => ({\n  type: SWITCH_CART_STORE_PICKER,\n  payload,\n});\nconst switchCartItemPicker = (payload) => ({\n  type: SWITCH_CART_ITEM_PICKER,\n  payload,\n});\nconst fillCartStorePicker = (payload) => ({\n  type: FILL_CART_STORE_PICKER,\n  payload,\n});\nconst fillCartItemPicker = (payload) => ({\n  type: FILL_CART_ITEM_PICKER,\n  payload,\n});\nconst modifyProductFromCart = (payload) => ({\n  type: MODIFY_PRODUCT_FROM_CART,\n  payload,\n});\nconst resetCartSwitch = () => ({\n  type: RESET_CART_SWITCH,\n});\nconst cartStoreReplacementAction = (payload) => ({\n  type: CART_STORE_REPLACEMENT_ACTION,\n  payload,\n});\nconst modifiDeliveryStateAndValue = (payload) => ({\n  type: MODIFY_DELIVERY_STATE_AND_VALUE,\n  payload,\n});\n// ----------------- Switch Reducers -----------\n// ---------------- Reducers ------------------\nconst cartSwitchInitialState = {\n  shoppingcart: true,\n  cartstorepicker: false,\n  cartitempicker: false,\n};\nconst cartSwitchReducer = (state = cartSwitchInitialState, action) => {\n  const activeState = {\n    shoppingcart: state.shoppingcart,\n    cartstorepicker: state.cartstorepicker,\n    cartitempicker: state.cartitempicker,\n  };\n  switch (action.type) {\n    case SWITCH_SHOPPING_CART:\n      activeState.shoppingcart = action.payload;\n      return activeState;\n    case SWITCH_CART_STORE_PICKER:\n      activeState.cartstorepicker = action.payload;\n      return activeState;\n    case SWITCH_CART_ITEM_PICKER:\n      activeState.cartitempicker = action.payload;\n      return activeState;\n    case RESET_CART_SWITCH:\n      return cartSwitchInitialState;\n    default:\n      return state;\n  }\n};\nconst cartReducerInitialState = {\n  ordercontent: [],\n  customerid: null,\n  customername: null,\n  customerphone: null,\n  code: `order_${idGenerator()}`,\n  orderaddress: null,\n  orderaddressref: null,\n  orderproductsamount: null,\n  orderamounttotal: null,\n  orderdeliverystate: false,\n  orderdeliveryamount: 0,\n  paymentmethod: null,\n  orderregisterdate: null,\n  orderdeliverdate: false,\n  orderregistertime: null,\n  orderdelivertime: null,\n};\nconst cartReducer = (state = cartReducerInitialState, action) => {\n  const productsArray = state.ordercontent;\n  const stateObject = state;\n  const sumProducts = (array) => {\n    const priceArray = [];\n    for (let i = 0; i < array.length; i += 1) {\n      priceArray.push(parseFloat(array[i].price).toFixed(2));\n    }\n    return priceArray.reduce((a, b) => a + b);\n  };\n  switch (action.type) {\n    case APPEND_PRODUCT_TO_CART:\n      productsArray.push(action.payload);\n      stateObject.ordercontent = productsArray;\n      stateObject.orderproductsamount = sumProducts(productsArray);\n      stateObject.orderamounttotal = sumProducts(productsArray)\n      + stateObject.orderdeliveryamount;\n      return stateObject;\n    case MODIFY_PRODUCT_FROM_CART:\n      stateObject.ordercontent = productsArray.filter((e) => e.code !== action.payload.code);\n      stateObject.ordercontent.push(action.payload);\n      return stateObject;\n    case MODIFY_DELIVERY_STATE_AND_VALUE:\n      stateObject.orderdeliverdate = true;\n      stateObject.orderdeliveryamount = parseFloat(action.payload).toFixed(2);\n      return stateObject;\n    default:\n      return state;\n  }\n};\nconst cartStorePickerReducer = (state = [], action) => {\n  const replaceFunction = () => {\n    const stateArray = [...state.content];\n    const newArray = [];\n    for (let i = 0; i < stateArray.length; i += 1) {\n      if (stateArray[i].header === action.payload.header) {\n        newArray.push(action.payload);\n      } else {\n        newArray.push(stateArray[i]);\n      }\n    }\n    return newArray;\n  };\n  switch (action.type) {\n    case FILL_CART_STORE_PICKER:\n      return action.payload;\n    case CART_STORE_REPLACEMENT_ACTION:\n      return {\n        header: state.header,\n        price: state.price,\n        code: state.code,\n        content: replaceFunction(),\n      };\n    default:\n      return state;\n  }\n};\nconst cartItemPickerReducer = (state = [], action) => {\n  switch (action.type) {\n    case FILL_CART_ITEM_PICKER:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// ---------------- Middlewares and Side Effects --------------\n// ---------------- Exports --------------\nexport {\n  // ------ Reducers -------\n  cartReducer,\n  cartSwitchReducer,\n  cartStorePickerReducer,\n  cartItemPickerReducer,\n  // ------ Actions --------\n  buildProduct,\n  switchShoppingCart,\n  switchCartStorePicker,\n  switchCartItemPicker,\n  fillCartStorePicker,\n  modifyProductFromCart,\n  fillCartItemPicker,\n  resetCartSwitch,\n  cartStoreReplacementAction,\n  modifiDeliveryStateAndValue,\n  // ---- Middlewares -----\n};\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { cartStoreReplacementAction, switchCartItemPicker, switchCartStorePicker } from '../../../redux/cart/cart';\n// import { switchCartItemPicker, switchCartStorePicker } from '../../../redux/cart/cart';\n\nconst Cartitempicker = () => {\n  const dispatch = useDispatch();\n  const itemData = useSelector((state) => state.cartItemPickerReducer);\n  const [completedFields, setCompleted] = useState(false);\n  const [itemsCounter, setCounter] = useState(0);\n  const [uncompleteAlert, setUncAlert] = useState(false);\n\n  useEffect(() => {\n    setCompleted(true);\n  }, []);\n\n  const handleUpClick = (key, ref) => {\n    const input = document.getElementById(ref);\n    const allInput = document.querySelectorAll(`.${key}`);\n    const allInputArray = [];\n    allInput.forEach((e) => {\n      allInputArray.push(parseInt(e.value, 10));\n    });\n    const sumValue = allInputArray.reduce((a, b) => a + b);\n    const maxValue = parseInt(itemData.maxvalue, 10);\n    const factor = parseInt(itemData.factor, 10);\n    if (sumValue < maxValue) {\n      setCounter(itemsCounter - factor);\n      input.value = parseInt(input.value, 10) + factor;\n      if (maxValue - sumValue === factor) {\n        setCompleted(true);\n      }\n    }\n  };\n  const handleDownClick = (ref) => {\n    const input = document.getElementById(ref);\n    const factor = parseInt(itemData.factor, 10);\n    if (parseInt(input.value, 10) > 0) {\n      setCounter(itemsCounter + factor);\n      input.value = parseInt(input.value, 10) - parseInt(itemData.factor, 10);\n      setCompleted(false);\n    }\n  };\n  const handleAddClick = (key) => {\n    if (completedFields) {\n      const nameTitle = document.querySelectorAll('#sub_item_name');\n      const nameDescr = document.querySelectorAll('#sub_item_description');\n      const quantityInput = document.querySelectorAll(`.${key}`);\n      const nameTitleArray = [];\n      for (let i = 0; i < nameTitle.length; i += 1) {\n        nameTitleArray.push({\n          name: nameTitle[i].innerHTML,\n          quantity: parseInt(quantityInput[i].value, 10),\n          description: nameDescr[i].innerHTML,\n          codename: quantityInput[i].id,\n        });\n      }\n      const objectForSend = {\n        header: itemData.header,\n        content: nameTitleArray,\n        completed: true,\n        maxvalue: parseInt(itemData.maxvalue, 10),\n        factor: parseInt(itemData.factor, 10),\n      };\n      dispatch(cartStoreReplacementAction(objectForSend));\n      dispatch(switchCartItemPicker(false));\n      dispatch(switchCartStorePicker(true));\n      /*  dispatch(changeCompletedState(itemData.header)); */\n    } else {\n      setUncAlert(true);\n    }\n  };\n  const handleBackBtn = () => {\n    dispatch(switchCartItemPicker(false));\n    dispatch(switchCartStorePicker(true));\n  };\n  return (\n    <div>\n      <h1>\n        Elige tus\n        {' '}\n        {itemData.header}\n      </h1>\n      {itemData.content.map((innerdata) => (\n        <div key={innerdata.name}>\n          <h1 id=\"sub_item_name\">\n            {innerdata.name}\n          </h1>\n          <p id=\"sub_item_description\">{innerdata.description}</p>\n          <div>\n            <input className={`classident_${itemData.header.split(' ').join('_')}`} id={innerdata.codename} type=\"number\" defaultValue={innerdata.quantity} />\n            <div>\n              <button type=\"button\" onClick={() => { handleUpClick(`classident_${itemData.header.split(' ').join('_')}`, innerdata.codename); }}>Up</button>\n              <button type=\"button\" onClick={() => { handleDownClick(innerdata.codename); }}>Down</button>\n            </div>\n          </div>\n        </div>\n      ))}\n      <div>{completedFields ? 'Completed' : `Tienes ${itemsCounter} por escoger`}</div>\n      {uncompleteAlert ? (<div>Background</div>) : ''}\n      {uncompleteAlert ? (<div onClick={() => { setUncAlert(false); }}><h1>Aun tienes items por escoger!</h1></div>) : ''}\n      <button type=\"button\" onClick={() => { handleAddClick(`classident_${itemData.header.split(' ').join('_')}`); }}>Aceptar</button>\n      <button type=\"button\" onClick={() => handleBackBtn()}>Volver</button>\n    </div>\n  );\n};\n\nexport default Cartitempicker;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fillCartItemPicker,\n  modifyProductFromCart,\n  switchCartItemPicker,\n  switchCartStorePicker,\n  switchShoppingCart,\n} from '../../../redux/cart/cart';\n\nconst Cartstorepicker = () => {\n  const dispatch = useDispatch();\n  const pickerData = useSelector((state) => state.cartStorePickerReducer);\n  const handleClick = (info) => {\n    dispatch(fillCartItemPicker(info));\n    dispatch(switchCartStorePicker(false));\n    dispatch(switchCartItemPicker(true));\n  };\n  const checkAll = (array) => {\n    for (let i = 0; i < array.length; i += 1) {\n      if (!array[i].completed) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleAddProductToCart = () => {\n    if (checkAll(pickerData.content)) {\n      dispatch(modifyProductFromCart(pickerData));\n      dispatch(switchCartStorePicker(false));\n      dispatch(switchShoppingCart(true));\n    }\n    return false;\n  };\n  const handleBackBtn = () => {\n    dispatch(switchCartStorePicker(false));\n    dispatch(switchShoppingCart(true));\n  };\n  return (\n    <div className=\"store_picker_container\">\n      <div>\n        <div>StorePicker</div>\n        {pickerData.content.map((data) => (\n          <div key={data.header}>\n            <button\n              className={data.completed ? 'completed_btn' : 'uncompleted_btn'}\n              type=\"button\"\n              onClick={() => {\n                handleClick(data);\n              }}\n            >\n              {data.header}\n            </button>\n          </div>\n        ))}\n        <button type=\"button\" onClick={() => handleAddProductToCart()}>Terminar modificaciones</button>\n        <button type=\"button\" onClick={() => handleBackBtn()}>Volver</button>\n      </div>\n    </div>\n  );\n};\nexport default Cartstorepicker;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { switchShoppingCart, switchCartStorePicker, fillCartStorePicker } from '../redux/cart/cart';\nimport Cartitempicker from './modules/shoppingcart/cartitempicker';\nimport Cartstorepicker from './modules/shoppingcart/cartstorepicker';\nimport { miniIdGenerator } from './utilities/idgen';\n\nconst ShoppingCart = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.cartReducer);\n  const switchState = useSelector((state) => state.cartSwitchReducer);\n  const handleEditClick = (param) => {\n    dispatch(fillCartStorePicker(param));\n    dispatch(switchCartStorePicker(true));\n    dispatch(switchShoppingCart(false));\n  };\n  return (\n    <div>\n      {\n      switchState.shoppingcart\n        ? (\n          <div>\n            {data.ordercontent.map((eh) => (\n              <div key={`${eh.header}${miniIdGenerator()}`}>\n                <h1>{eh.header}</h1>\n                {eh.content.map((ec) => (\n                  <div key={ec.header}>\n                    <h2>{ec.header}</h2>\n                    {ec.content.map((ecc) => (\n                      ecc.quantity > 0\n                        ? (\n                          <h3 key={ecc.name}>\n                            {ecc.name}\n                            {' x '}\n                            {ecc.quantity}\n                          </h3>\n                        ) : ''\n                    ))}\n                  </div>\n                ))}\n                <footer>{eh.price}</footer>\n                <button type=\"button\" onClick={() => { handleEditClick(eh); }}>Editar</button>\n              </div>\n            ))}\n            <h1>Monto de compra</h1>\n            <h2>{`S/ ${data.orderproductsamount}`}</h2>\n            <h1>Delivery</h1>\n            <h2>{`S/ ${data.orderproductsamount}`}</h2>\n          </div>\n\n        ) : ''\n        }\n      {switchState.cartstorepicker ? <Cartstorepicker /> : ''}\n      {switchState.cartitempicker ? <Cartitempicker /> : ''}\n    </div>\n  );\n};\nexport default ShoppingCart;\n","import idGenerator from '../../components/utilities/idgen';\n\n// ---------------- paths (Data) --------------------\nconst TRIGGER_STORE = 'REDUX/STORE/STORE/GET_CATEGORIES';\nconst TRIGGER_PRODUCTS = 'REDUX/STORE/STORE/TRIGGER_PRODUCTS';\nconst GET_CATEGORIES = 'REDUX/STORE/STORE/UPD_STORE';\nconst GET_PRODUCTS = 'REDUX/STORE/STORE/GET_PRODUCTS';\nconst TRIGGER_PICKER = 'REDUX/STORE/TRIGGER_PICKER';\nconst GET_PICKER = 'REDUX/STORE/GET_PICKER';\nconst SEND_ITEM_CONTENT = 'REDUX/STORE/SEND_ITEM_CONTENT';\nconst APPEND_ITEM_TO_PRODUCT = 'REDUX/STORE/APPEND_ITEM_TO_PRODUCT';\nconst BUILD_ITEM = 'REDUX/STORE/BUILD_ITEM';\nconst SET_ITEM_HEADER = 'REDUX/STORE/SET_ITEM_HEADER';\nconst SET_PRODUCT_HEADER = 'REDUX/STORE/SET_PRODUCT_HEADER';\nconst SET_FINAL_PRODUCT_HEADER = 'REDUX/STORE/SET_FINAL_PRODUCT_HEADER';\nconst CHANGE_COMPLETED_STATE = 'REDUX/STORE/CHANGE_COMPLETED_STATE';\n// ---------------- paths (Switch) --------------------\nconst SWITCH_PARENT_STATE = 'REDUX/STORE/SWITCH_PARENT_STATE';\nconst SWITCH_SECONDARY_STORE = 'REDUX/STORE/SWITCH_SECONDARY_STORE';\nconst SWITCH_STORE_PICKER = 'REDUX/STORE/SWITCH_STORE_PICKER';\nconst SWITCH_ITEM_PICKER = 'REDUX/STORE/SWITCH_ITEM_PICKER';\nconst RESET_STORE = 'REDUX/STORE/RESET_STORE';\n\n// ---------------- Initial state ------------\nlet firstLoadState = true;\nconst initialState = [];\n// ---------------- Actions (Data) ------------------\nconst triggerStore = (payload) => ({\n  type: TRIGGER_STORE,\n  payload,\n});\nconst updateProductsWithAPI = (payload) => ({\n  type: GET_CATEGORIES,\n  payload,\n});\nconst triggerProducts = (payload) => ({\n  type: TRIGGER_PRODUCTS,\n  payload,\n});\nconst getProducts = (payload) => ({\n  type: GET_PRODUCTS,\n  payload,\n});\nconst triggerPicker = (payload) => ({\n  type: TRIGGER_PICKER,\n  payload,\n});\nconst getPicker = (payload) => ({\n  type: GET_PICKER,\n  payload,\n});\nconst opentItemPicker = (payload) => ({\n  type: SEND_ITEM_CONTENT,\n  payload,\n});\nconst setProductHeader = (payload) => ({\n  type: SET_PRODUCT_HEADER,\n  payload,\n});\nconst changeCompletedState = (payload) => ({\n  type: CHANGE_COMPLETED_STATE,\n  payload,\n});\nconst setItemHeader = (payload) => ({\n  type: SET_ITEM_HEADER,\n  payload,\n});\nconst buildItem = (payload) => ({\n  type: BUILD_ITEM,\n  payload,\n});\nconst appendItemToProduct = (payload) => ({\n  type: APPEND_ITEM_TO_PRODUCT,\n  payload,\n});\nconst setFinalProductHeader = (payload) => ({\n  type: SET_FINAL_PRODUCT_HEADER,\n  payload,\n});\n// ---------------- Actions (Switch) ------------------\nconst switchParentState = (payload) => ({\n  type: SWITCH_PARENT_STATE,\n  payload,\n});\nconst switchSecondaryState = (payload) => ({\n  type: SWITCH_SECONDARY_STORE,\n  payload,\n});\nconst switchStorePicker = (payload) => ({\n  type: SWITCH_STORE_PICKER,\n  payload,\n});\nconst switchItemPicker = (payload) => ({\n  type: SWITCH_ITEM_PICKER,\n  payload,\n});\nconst resetStore = () => ({\n  type: RESET_STORE,\n});\n\n// ----------------- SWITCH --------------\n// ----------------- REDUCERS ------------\nconst storeSwitchDefaultState = {\n  parentState: true,\n  secondaryStoreState: false,\n  storePickerState: false,\n  itemPickerState: false,\n};\nconst storeSwitchReducer = (state = storeSwitchDefaultState, action) => {\n  const storeState = {\n    parentState: state.parentState,\n    secondaryStoreState: state.secondaryStoreState,\n    storePickerState: state.storePickerState,\n    itemPickerState: state.itemPickerState,\n  };\n  switch (action.type) {\n    case SWITCH_PARENT_STATE:\n      storeState.parentState = action.payload;\n      return storeState;\n    case SWITCH_SECONDARY_STORE:\n      storeState.secondaryStoreState = action.payload;\n      return storeState;\n    case SWITCH_STORE_PICKER:\n      storeState.storePickerState = action.payload;\n      return storeState;\n    case SWITCH_ITEM_PICKER:\n      storeState.itemPickerState = action.payload;\n      return storeState;\n    case RESET_STORE:\n      return storeSwitchDefaultState;\n    default:\n      return state;\n  }\n};\n\n// ----------------- STORE MAIN --------------\n// ----------------- REDUCERS ------------\nconst storemainReducer = (state = initialState, action) => {\n  const actionPayload = action.payload;\n  switch (action.type) {\n    case TRIGGER_STORE:\n      return state;\n    case GET_CATEGORIES:\n      return actionPayload;\n    default:\n      return state;\n  }\n};\nconst storeSecondaryReducer = (state = initialState, action) => {\n  const actionPayload = action.payload;\n  switch (action.type) {\n    case TRIGGER_PRODUCTS:\n      return initialState;\n    case GET_PRODUCTS:\n      return actionPayload;\n    default:\n      return state;\n  }\n};\nconst storePickerReducer = (state = initialState, action) => {\n  const actionPayload = action.payload;\n  const activeState = state;\n  const activeContent = state.content;\n  const replaceCompletedState = (name) => {\n    for (let i = 0; i < activeContent.length; i += 1) {\n      if (activeContent[i].name === name) {\n        activeContent[i].completed = true;\n      }\n    }\n  };\n  switch (action.type) {\n    case SET_PRODUCT_HEADER:\n      return {\n        header: actionPayload.header,\n        price: actionPayload.price,\n        content: [],\n      };\n    case GET_PICKER:\n      activeState.content = actionPayload;\n      return {\n        header: activeState.header,\n        content: activeState.content,\n        price: activeState.price,\n      };\n    case CHANGE_COMPLETED_STATE:\n      replaceCompletedState(action.payload);\n      return {\n        header: activeState.header,\n        content: activeContent,\n        price: activeState.price,\n      };\n    default:\n      return state;\n  }\n};\nconst itemPickerReducer = (state = initialState, action) => {\n  const actionPayload = action.payload;\n  switch (action.type) {\n    case SET_ITEM_HEADER:\n      return {\n        header: actionPayload,\n        content: [],\n      };\n    case SEND_ITEM_CONTENT:\n      return {\n        header: state.header,\n        content: actionPayload,\n      };\n    default:\n      return state;\n  }\n};\nconst itemBuildReducer = (state = initialState, action) => {\n  const activeState = state;\n  const actionPayload = action.payload;\n  switch (action.type) {\n    case BUILD_ITEM:\n      activeState.content = actionPayload;\n      return activeState;\n    default:\n      return state;\n  }\n};\nconst productBuildReducer = (state = initialState, action) => {\n  const load = action.payload;\n  const tester = () => {\n    const arrayToTest = [...state.content];\n    if (arrayToTest.length > 0) {\n      for (let i = 0; i < arrayToTest.length; i += 1) {\n        if (arrayToTest[i].header === load.header) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const replaceData = (toRep) => {\n    const arrayToRep = [...state.content];\n    for (let i = 0; i < arrayToRep.length; i += 1) {\n      if (arrayToRep[i].header === toRep.header) {\n        arrayToRep[i].content = toRep.content;\n      }\n    }\n    return arrayToRep;\n  };\n  switch (action.type) {\n    case SET_FINAL_PRODUCT_HEADER:\n      return {\n        header: action.payload.header,\n        price: action.payload.price,\n        code: idGenerator(),\n        content: [],\n      };\n    case APPEND_ITEM_TO_PRODUCT:\n      if (tester()) {\n        return {\n          header: state.header,\n          price: state.price,\n          code: state.code,\n          content: replaceData(load),\n        };\n      }\n      return {\n        header: state.header,\n        price: state.price,\n        code: state.code,\n        content: [...state.content, load],\n      };\n\n    default:\n      return state;\n  }\n};\n// ---------------- Middlewares and Side Effects --------------\nconst getCategoriesFromAPIMiddleware = (store) => (next) => (action) => {\n  if (action.type === TRIGGER_STORE) {\n    if (firstLoadState) {\n      firstLoadState = false;\n      fetch('/getCategories', {\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      }).then((response) => response.json())\n        .then((json) => store.dispatch(updateProductsWithAPI(json)));\n    }\n  }\n  next(action);\n};\nconst getProductsFromAPIMiddleware = (store) => (next) => (action) => {\n  if (action.type === TRIGGER_PRODUCTS) {\n    fetch(`/getProdWithId/${action.payload}`, {\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then((response) => response.json())\n      .then((json) => store.dispatch(getProducts(json)));\n  }\n  next(action);\n};\nconst getItemsFromAPIMiddleware = (store) => (next) => (action) => {\n  if (action.type === SET_PRODUCT_HEADER) {\n    fetch(`/getItemWithId/${action.payload.id}`, {\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then((response) => response.json())\n      .then((json) => store.dispatch(getPicker(json)));\n  }\n  next(action);\n};\nconst addItemToProductMiddleware = (store) => (next) => (action) => {\n  if (action.type === BUILD_ITEM) {\n    store.dispatch(appendItemToProduct(action.payload));\n  }\n  next(action);\n};\nconst addFinalProductHeaderMiddleware = (store) => (next) => (action) => {\n  if (action.type === SET_PRODUCT_HEADER) {\n    store.dispatch(setFinalProductHeader({\n      header: action.payload.header,\n      price: action.payload.price,\n    }));\n  }\n  next(action);\n};\n// ---------------- Exports --------------\nexport {\n  // ------ Reducers -------\n  storeSwitchReducer,\n  storemainReducer,\n  storeSecondaryReducer,\n  storePickerReducer,\n  itemPickerReducer,\n  itemBuildReducer,\n  productBuildReducer,\n  // ------ Actions (Switch) --------\n  switchParentState,\n  switchSecondaryState,\n  switchStorePicker,\n  switchItemPicker,\n  resetStore,\n  // ------ Actions (Data) --------\n  triggerStore,\n  triggerProducts,\n  triggerPicker,\n  getProducts,\n  getPicker,\n  updateProductsWithAPI,\n  opentItemPicker,\n  setProductHeader,\n  buildItem,\n  setItemHeader,\n  changeCompletedState,\n  // ---- Middlewares -----\n  getCategoriesFromAPIMiddleware,\n  getProductsFromAPIMiddleware,\n  getItemsFromAPIMiddleware,\n  addItemToProductMiddleware,\n  addFinalProductHeaderMiddleware,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  resetStore,\n  setProductHeader,\n  switchSecondaryState,\n  switchStorePicker,\n} from '../../../redux/store/store';\n\nconst Storesecondary = () => {\n  const secondaryData = useSelector((state) => state.storeSecondaryReducer);\n  const dispatch = useDispatch();\n  const handleClick = (data) => {\n    dispatch(switchSecondaryState(false));\n    dispatch(switchStorePicker(true));\n    dispatch(setProductHeader(data));\n  };\n  const HandleBackBtn = () => {\n    dispatch(resetStore());\n  };\n  return (\n    <div className=\"store_secondary_container\">\n      <div>\n        <div>StoreSecondary</div>\n        {secondaryData.map((data) => (\n          <button key={data.nombre} type=\"button\" onClick={() => { handleClick({ id: data.idproductos, header: data.nombre, price: data.precio }); }}>{data.nombre}</button>\n        ))}\n        <button type=\"button\" onClick={() => { HandleBackBtn(); }}>Volver</button>\n      </div>\n    </div>\n  );\n};\nexport default Storesecondary;\n","import React from 'react';\nimport { Redirect } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  opentItemPicker,\n  resetStore,\n  setItemHeader,\n  switchItemPicker,\n  switchSecondaryState,\n  switchStorePicker,\n} from '../../../redux/store/store';\nimport { buildProduct } from '../../../redux/cart/cart';\n\nconst Storepicker = () => {\n  const dispatch = useDispatch();\n  const pickerData = useSelector((state) => state.storePickerReducer);\n  const productBuild = useSelector(((state) => state.productBuildReducer));\n  const handleClick2 = (info, header) => {\n    dispatch(switchStorePicker(false));\n    dispatch(setItemHeader(header));\n    dispatch(opentItemPicker(info));\n    dispatch(switchItemPicker(true));\n  };\n  const checkAll = (array) => {\n    for (let i = 0; i < array.length; i += 1) {\n      if (!array[i].completed) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleAddProductToCart = () => {\n    if (checkAll(pickerData.content)) {\n      dispatch(resetStore());\n      dispatch(buildProduct(productBuild));\n      return (<Redirect push to=\"/store\" />);\n    }\n    return false;\n  };\n  const handleBackBtn = () => {\n    dispatch(switchStorePicker(false));\n    dispatch(switchSecondaryState(true));\n  };\n  return (\n    <div className=\"store_picker_container\">\n      <div>\n        <div>StorePicker</div>\n        {pickerData.content.map((data) => (\n          <div key={data.name}>\n            <button\n              className={data.completed ? 'completed_btn' : 'uncompleted_btn'}\n              type=\"button\"\n              onClick={() => {\n                handleClick2(data, data.name);\n              }}\n            >\n              {data.name}\n            </button>\n          </div>\n        ))}\n        <button type=\"button\" onClick={() => handleAddProductToCart()}>Agregar al carrito</button>\n        <button type=\"button\" onClick={() => handleBackBtn()}>Volver</button>\n      </div>\n    </div>\n  );\n};\nexport default Storepicker;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  buildItem,\n  changeCompletedState,\n  switchItemPicker,\n  switchStorePicker,\n} from '../../../redux/store/store';\n\nconst Itempicker = () => {\n  const dispatch = useDispatch();\n  const itemData = useSelector((state) => state.itemPickerReducer);\n  const productBuild = useSelector((state) => state.productBuildReducer);\n  const [completedFields, setCompleted] = useState(false);\n  const [itemsCounter, setCounter] = useState(parseInt(itemData.content.indexes.cantidad, 10));\n  const [uncompleteAlert, setUncAlert] = useState(false);\n  const tester = () => {\n    const arrayToTest = [...productBuild.content];\n    if (arrayToTest.length > 0) {\n      for (let i = 0; i < arrayToTest.length; i += 1) {\n        if (arrayToTest[i].header === itemData.header) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  useEffect(() => {\n    if (tester()) {\n      const allInputs = document.querySelectorAll(`.${itemData.content.name.split(' ').join('_')}`);\n      const arrayToSample = [...productBuild.content];\n      let allPreviousValues = [];\n      for (let i = 0; i < arrayToSample.length; i += 1) {\n        if (arrayToSample[i].header === itemData.header) {\n          allPreviousValues = arrayToSample[i].content;\n        }\n      }\n      for (let x = 0; x < allInputs.length; x += 1) {\n        for (let i = 0; i < allPreviousValues.length; i += 1) {\n          if (itemData.content.content[x].nombre === allPreviousValues[i].name) {\n            allInputs[x].value = allPreviousValues[i].quantity;\n          }\n        }\n      }\n      setCounter(0);\n      setCompleted(true);\n    }\n  }, []);\n  const handleUpClick = (key, ref) => {\n    const input = document.getElementById(ref);\n    const allInput = document.querySelectorAll(`.${key}`);\n    const allInputArray = [];\n    allInput.forEach((e) => {\n      allInputArray.push(parseInt(e.value, 10));\n    });\n    const sumValue = allInputArray.reduce((a, b) => a + b);\n    const maxValue = parseInt(itemData.content.indexes.cantidad, 10);\n    const factor = parseInt(itemData.content.indexes.factor, 10);\n    if (sumValue < maxValue) {\n      setCounter(itemsCounter - factor);\n      input.value = parseInt(input.value, 10) + factor;\n      if (maxValue - sumValue === factor) {\n        setCompleted(true);\n      }\n    }\n  };\n  const handleDownClick = (ref) => {\n    const input = document.getElementById(ref);\n    const factor = parseInt(itemData.content.indexes.factor, 10);\n    if (parseInt(input.value, 10) > 0) {\n      setCounter(itemsCounter + factor);\n      input.value = parseInt(input.value, 10) - parseInt(itemData.content.indexes.factor, 10);\n      setCompleted(false);\n    }\n  };\n  const handleAddClick = (key) => {\n    if (completedFields) {\n      const nameTitle = document.querySelectorAll('#sub_item_name');\n      const nameDescr = document.querySelectorAll('#sub_item_description');\n      const quantityInput = document.querySelectorAll(`.${key}`);\n      const nameTitleArray = [];\n      for (let i = 0; i < nameTitle.length; i += 1) {\n        nameTitleArray.push({\n          name: nameTitle[i].innerHTML,\n          quantity: parseInt(quantityInput[i].value, 10),\n          description: nameDescr[i].innerHTML,\n          codename: quantityInput[i].id,\n        });\n      }\n      const objectForSend = {\n        header: itemData.header,\n        content: nameTitleArray,\n        completed: true,\n        maxvalue: parseInt(itemData.content.indexes.cantidad, 10),\n        factor: parseInt(itemData.content.indexes.factor, 10),\n      };\n      dispatch(buildItem(objectForSend));\n      dispatch(switchItemPicker(false));\n      dispatch(switchStorePicker(true));\n      dispatch(changeCompletedState(itemData.header));\n    } else {\n      setUncAlert(true);\n    }\n  };\n  const handleBackBtn = () => {\n    dispatch(switchItemPicker(false));\n    dispatch(switchStorePicker(true));\n  };\n  return (\n    <div>\n      <h1>\n        Elige tus\n        {' '}\n        {itemData.header}\n      </h1>\n      {itemData.content.content.map((innerdata) => (\n        <div key={innerdata.nombre}>\n          <h1 id=\"sub_item_name\">\n            {innerdata.nombre}\n          </h1>\n          <p id=\"sub_item_description\">{innerdata.descripcion}</p>\n          <div>\n            <input className={itemData.content.name.split(' ').join('_')} id={innerdata.codename} type=\"number\" defaultValue={0} />\n            <div>\n              <button type=\"button\" onClick={() => { handleUpClick(itemData.content.name.split(' ').join('_'), innerdata.codename); }}>Up</button>\n              <button type=\"button\" onClick={() => { handleDownClick(innerdata.codename); }}>Down</button>\n            </div>\n          </div>\n        </div>\n      ))}\n      <div>{completedFields ? 'Completed' : `Tienes ${itemsCounter} por escoger`}</div>\n      {uncompleteAlert ? (<div>Background</div>) : ''}\n      {uncompleteAlert ? (<div onClick={() => { setUncAlert(false); }}><h1>Aun tienes items por escoger!</h1></div>) : ''}\n      <button type=\"button\" onClick={() => { handleAddClick(itemData.content.name.split(' ').join('_')); }}>Aceptar</button>\n      <button type=\"button\" onClick={() => handleBackBtn()}>Volver</button>\n    </div>\n  );\n};\n\nexport default Itempicker;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  switchParentState,\n  switchSecondaryState,\n  triggerProducts,\n  triggerStore,\n} from '../../../redux/store/store';\nimport Storesecondary from './storesecondary';\nimport Storepicker from './storepicker';\nimport Itempicker from './itempicker';\n\nconst Storemain = () => {\n  const dispatch = useDispatch();\n  const productData = useSelector((state) => state.storemainReducer);\n  const switchState = useSelector((state) => state.storeSwitchReducer);\n  const [parentState,\n    secondaryStoreState,\n    storePickerState,\n    itemPickerState] = [\n    switchState.parentState,\n    switchState.secondaryStoreState,\n    switchState.storePickerState,\n    switchState.itemPickerState,\n  ];\n  useEffect(() => {\n    dispatch(triggerStore([]));\n    dispatch(switchParentState(true));\n  }, []);\n  const handleClick = (key) => {\n    dispatch(switchParentState(false));\n    dispatch(triggerProducts(key));\n    dispatch(switchSecondaryState(true));\n  };\n  return (\n    <div className=\"store_main_container\">\n      {parentState\n        ? (\n          <div>\n            {productData.map((data) => (\n              <button type=\"button\" key={data.nombre} onClick={() => handleClick(data.idcategorias)}>{data.nombre}</button>\n            ))}\n          </div>\n        ) : false}\n\n      {secondaryStoreState\n        ? (\n          <Storesecondary />\n        ) : false}\n      {storePickerState\n        ? (\n          <Storepicker />\n        ) : false}\n      {itemPickerState\n        ? (\n          <Itempicker />\n        ) : false}\n    </div>\n  );\n};\nexport default Storemain;\n","import React from 'react';\nimport Storemain from './modules/store/storemain';\n\nconst Store = () => (\n  <div id=\"Products\">\n    <Storemain />\n  </div>\n);\n\nexport default Store;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport HomePage from './components/homepage';\nimport ShoppingCart from './components/shoppingcart';\nimport Store from './components/store';\nimport { resetCartSwitch } from './redux/cart/cart';\nimport { resetStore } from './redux/store/store';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const handleStoreCloseClick = () => {\n    dispatch(resetStore());\n    dispatch(resetCartSwitch());\n  };\n  return (\n    <Router>\n      <div className=\"hello\">\n        <h1>Makit App</h1>\n      </div>\n      <div className=\"switch\">\n        <div className=\"switch_header\">\n          <ul className=\"nav-bar\">\n            <li className=\"nav-bar-li\">\n              <Link onClick={() => { handleStoreCloseClick(); }} to=\"/home\">Home</Link>\n            </li>\n            <li className=\"nav-bar-li\">\n              <Link onClick={() => { handleStoreCloseClick(); }} to=\"/store\">Store</Link>\n            </li>\n            <li className=\"nav-bar-li\">\n              <Link onClick={() => { handleStoreCloseClick(); }} to=\"/shop\">Shoping Cart</Link>\n            </li>\n          </ul>\n        </div>\n        <Switch>\n          <Route path=\"/home\">\n            <HomePage />\n          </Route>\n          <Route path=\"/store\">\n            <Store />\n          </Route>\n          <Route path=\"/shop\">\n            <ShoppingCart />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import {\n  createStore, compose, combineReducers, applyMiddleware,\n} from 'redux';\nimport logger from 'redux-logger';\n// ----------- STORE IMPORTS -----------\nimport {\n  // --- Reducers --\n  storeSwitchReducer,\n  storemainReducer,\n  storeSecondaryReducer,\n  storePickerReducer,\n  itemPickerReducer,\n  itemBuildReducer,\n  productBuildReducer,\n  // --- Middlewares --\n  getCategoriesFromAPIMiddleware,\n  getProductsFromAPIMiddleware,\n  getItemsFromAPIMiddleware,\n  addItemToProductMiddleware,\n  addFinalProductHeaderMiddleware,\n} from './store/store';\n// ----------- CART IMPORTS -----------\nimport {\n  // --- Reducers --\n  cartReducer,\n  cartSwitchReducer,\n  cartStorePickerReducer,\n  cartItemPickerReducer,\n  // --- Middlewares --\n} from './cart/cart';\n\nconst reducer = combineReducers({\n  // ------------ Store Reducers -----\n  storeSwitchReducer,\n  storemainReducer,\n  storeSecondaryReducer,\n  storePickerReducer,\n  itemPickerReducer,\n  itemBuildReducer,\n  productBuildReducer,\n  // ----------- Cart Reducers ------\n  cartReducer,\n  cartSwitchReducer,\n  cartStorePickerReducer,\n  cartItemPickerReducer,\n});\n\nconst composedEnhancer = compose(\n  // ------------ Store Middlewares -----\n  applyMiddleware(getCategoriesFromAPIMiddleware),\n  applyMiddleware(getProductsFromAPIMiddleware),\n  applyMiddleware(getItemsFromAPIMiddleware),\n  applyMiddleware(addItemToProductMiddleware),\n  applyMiddleware(addFinalProductHeaderMiddleware),\n  // ------------ Cart Middlewares -----\n\n  // ------------- Logger --------------\n  applyMiddleware(logger),\n);\n\nconst store = createStore(\n  reducer,\n  undefined,\n  composedEnhancer,\n);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/configureStore';\nimport './styles/_login.scss';\nimport './styles/_store.scss';\nimport './styles/_main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}